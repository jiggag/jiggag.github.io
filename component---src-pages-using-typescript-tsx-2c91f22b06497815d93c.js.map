{"version":3,"file":"component---src-pages-using-typescript-tsx-2c91f22b06497815d93c.js","mappings":"wLA+DA,UAnDwD,YAA2B,IAAfA,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KACxE,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKC,MAAM,qBACX,oEACA,oEAEG,IACD,sCACC,IAJH,6DAOG,IACD,yCACC,IATH,uEAYA,oEAEG,IACD,wCACC,IAJH,kBAMG,IACD,wCACC,IARH,cAUG,IACD,sCACC,IAZH,SAeA,2DAEGD,EAFH,uBAIG,IACAD,EAAKG,KAAKC,UALb,KAQA,2DAEG,IACD,qBAAGC,KAAK,6CAAR,kCAHF,KAMA,gBAAC,EAAAC,KAAD,CAAMC,GAAG,KAAT","sources":["webpack://gatsby-starter-default/./src/pages/using-typescript.tsx"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from 'react';\nimport { PageProps, Link, graphql } from 'gatsby';\nimport { Layout } from 'components/Layout';\nimport { Seo } from 'components/Seo';\n\ninterface DataProps {\n  site: {\n    buildTime: string;\n  };\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = function ({ data, path }) {\n  return (\n    <Layout>\n      <Seo title=\"Using TypeScript\" />\n      <h1>Gatsby supports TypeScript by default!</h1>\n      <p>\n        This means that you can create and write\n        {' '}\n        <em>.ts/.tsx</em>\n        {' '}\n        files for your pages, components etc. Please note that\n        the\n        {' '}\n        <em>gatsby-*.js</em>\n        {' '}\n        files (like gatsby-node.js) currently don't support TypeScript yet.\n      </p>\n      <p>\n        For type checking you'll want to install\n        {' '}\n        <em>typescript</em>\n        {' '}\n        via npm and run\n        {' '}\n        <em>tsc --init</em>\n        {' '}\n        to create a\n        {' '}\n        <em>tsconfig</em>\n        {' '}\n        file.\n      </p>\n      <p>\n        You're currently on the page \"\n        {path}\n        \" which was built on\n        {' '}\n        {data.site.buildTime}\n        .\n      </p>\n      <p>\n        To learn more, head over to our\n        {' '}\n        <a href=\"https://www.gatsbyjs.com/docs/typescript/\">documentation about TypeScript</a>\n        .\n      </p>\n      <Link to=\"/\">Go back to the homepage</Link>\n    </Layout>\n  );\n};\n\nexport default UsingTypescript;\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`;\n"],"names":["data","path","title","site","buildTime","href","Link","to"],"sourceRoot":""}