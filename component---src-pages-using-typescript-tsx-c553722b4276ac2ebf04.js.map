{"version":3,"file":"component---src-pages-using-typescript-tsx-c553722b4276ac2ebf04.js","mappings":"uLAqCA,UAzBwD,SAAAA,GAA0B,IAAhB,KAAEC,EAAI,KAAEC,GAAMF,EAC9E,OACEG,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAACE,EAAAA,EAAG,CAACC,MAAM,qBACXH,EAAAA,cAAA,UAAI,0CACJA,EAAAA,cAAA,SAAG,4CACwCA,EAAAA,cAAA,UAAI,YAAa,+DACjDA,EAAAA,cAAA,UAAI,eAAgB,wEAE/BA,EAAAA,cAAA,SAAG,4CACwCA,EAAAA,cAAA,UAAI,cAAe,oBAAiBA,EAAAA,cAAA,UAAI,cAAe,eAAa,IAC7GA,EAAAA,cAAA,UAAI,YAAa,UAEnBA,EAAAA,cAAA,SAAG,kCAC8BD,EAAK,wBAAsBD,EAAKM,KAAKC,UAAU,KAEhFL,EAAAA,cAAA,SAAG,kCAC+B,IAChCA,EAAAA,cAAA,KAAGM,KAAK,6CAA4C,kCAAkC,KAExFN,EAAAA,cAACO,EAAAA,KAAI,CAACC,GAAG,KAAI,2BAGnB,C","sources":["webpack://gatsby-starter-default/./src/pages/using-typescript.tsx"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from 'react';\nimport { PageProps, Link, graphql } from 'gatsby';\nimport { Layout } from 'components/Layout';\nimport { Seo } from 'components/Seo';\n\ninterface DataProps {\n  site: {\n    buildTime: string;\n  };\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = function ({ data, path }) {\n  return (\n    <Layout>\n      <Seo title=\"Using TypeScript\" />\n      <h1>Gatsby supports TypeScript by default!</h1>\n      <p>\n        This means that you can create and write <em>.ts/.tsx</em> files for your pages, components etc. Please note\n        that the <em>gatsby-*.js</em> files (like gatsby-node.js) currently don't support TypeScript yet.\n      </p>\n      <p>\n        For type checking you'll want to install <em>typescript</em> via npm and run <em>tsc --init</em> to create a{' '}\n        <em>tsconfig</em> file.\n      </p>\n      <p>\n        You're currently on the page \"{path}\" which was built on {data.site.buildTime}.\n      </p>\n      <p>\n        To learn more, head over to our{' '}\n        <a href=\"https://www.gatsbyjs.com/docs/typescript/\">documentation about TypeScript</a>.\n      </p>\n      <Link to=\"/\">Go back to the homepage</Link>\n    </Layout>\n  );\n};\n\nexport default UsingTypescript;\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`;\n"],"names":["_ref","data","path","React","Layout","Seo","title","site","buildTime","href","Link","to"],"sourceRoot":""}