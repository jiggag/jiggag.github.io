{
    "componentChunkName": "component---src-pages-markdown-remark-frontmatter-slug-tsx",
    "path": "/blog/modules-hoisting/",
    "result": {"data":{"markdownRemark":{"html":"<h4><code>호이스팅</code></h4>\n<pre><code>프로젝트 구조 (PAR 프로젝트 내부에 BRO, ME 프로젝트가 존재)\nPAR  + BRO + node_modules\n    |\n     + ME + node_modules\n    |\n     + node_modules\n</code></pre>\n<p>현재 프로젝트(<code>ME</code>)에서 <code>import axios from 'axios'</code>를 사용했을 때, 이 <code>axios</code>는 어디에 설치된 모듈을 가져오는 것일까?</p>\n<pre><code>1) 현재 프로젝트: ./node_modules\n2) 형제 프로젝트: ../bro/node_modules\n3) 부모 프로젝트: ../../par/node_modules\n</code></pre>\n<p>먼저 호출된 현재 프로젝트에서 해당 모듈을 찾는다. 없으면 형제 프로젝트로 올라가서 찾는다. 또 없으면 부모 프로젝트로 올라가서 찾는다.\n개발중에는 정상적으로 작동한다. 그러나 해당 프로젝트만 분리하여 배포하는 경우 호이스팅되었던 프로젝트 모듈이 없어지므로 오류가 발생한다.\n<code>호이스팅</code>이 변수, 함수에만 적용되는줄 알았는데 이런 모듈에도 적용이 되는 것을 직접 겪어보고 알게 되었다. (모듈이 함수지...)</p>","frontmatter":{"slug":"/blog/modules-hoisting","date":"2019년 11월 22일","title":"호이스팅"}}},"pageContext":{"id":"2eb4042e-d60c-54e5-ad8a-b0e51a67968a","frontmatter__slug":"/blog/modules-hoisting","__params":{"frontmatter__slug":"blog"}}},
    "staticQueryHashes": ["3000541721","3293771174"]}