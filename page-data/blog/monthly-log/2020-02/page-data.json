{"componentChunkName":"component---src-pages-markdown-remark-frontmatter-slug-tsx","path":"/blog/monthly-log/2020-02/","result":{"data":{"markdownRemark":{"html":"<h4 id=\"223---229\" style=\"position:relative;\"><a href=\"#223---229\" aria-label=\"223   229 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2/23 - 2/29</h4>\n<h4 id=\"library\" style=\"position:relative;\"><a href=\"#library\" aria-label=\"library permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>library</code></h4>\n<ul>\n<li>오픈소스 라이브러리 커스텀</li>\n<li>재설치하면 사라지는 커스텀 -> 해당 라이브러리를 프로젝트로 가져오기</li>\n<li>package.json에 버전 대신 해당 라이브러리 경로 지정</li>\n</ul>\n<h4 id=\"dns\" style=\"position:relative;\"><a href=\"#dns\" aria-label=\"dns permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>DNS</code></h4>\n<ul>\n<li>서버를 내렸다 올릴때면 ip가 바뀌길래 elastic ip로 고정시켜서 사용했다</li>\n<li>우연하게 질문타이밍 <code>EC2마다 각각 elastic ip 연결해줘요?</code></li>\n<li>예상외 답변이 돌아왔다 <code>elastic ip로 public ip를 고정하는게 좋은게 아니다. DNS를 고정하면 되지</code></li>\n<li>생각하지 못했다 해봐야지</li>\n<li><code>ELB를 두라고??</code></li>\n</ul>\n<h4 id=\"django\" style=\"position:relative;\"><a href=\"#django\" aria-label=\"django permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>Django</code></h4>\n<ul>\n<li>Python: python 2.x</li>\n<li>Python3: python 3.x</li>\n<li>python2는 지원 종료</li>\n<li>rest framework</li>\n</ul>\n<h4 id=\"msa--graphql\" style=\"position:relative;\"><a href=\"#msa--graphql\" aria-label=\"msa  graphql permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>MSA = GraphQL</code></h4>\n<ul>\n<li>MSA를 하고 있다 -> 1였던 API가 2가 되고 있다</li>\n<li>A와 B는 필요 의존적이다 -> 그럼 B를 호출하기 위해 A가 필수 선행된다면 서버단에서 해결하면 되지 않을까</li>\n<li><code>의존성이 생기면 MSA를 한 의미가 사라진다</code></li>\n<li>각각의 API를 조합해서 사용 -> 이거 GraphQL?</li>\n<li>GraphQL에는 JOIN이 없다 Resolver로 조합해서 사용한다 -> MSA와 GraphQL이 닮았다</li>\n<li>기존 프로젝트를 MSA/GraphQL로 바꾸는건 너무 큰 일이다 -> 신규 프로젝트에서는 의존성을 최소화한다면 세상 간편!?</li>\n</ul>\n<h4 id=\"216---222\" style=\"position:relative;\"><a href=\"#216---222\" aria-label=\"216   222 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2/16 - 2/22</h4>\n<h4 id=\"pm2\" style=\"position:relative;\"><a href=\"#pm2\" aria-label=\"pm2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>pm2</code></h4>\n<ul>\n<li>프로세스 관리를 위해 <code>forever</code> 사용했으나 <code>pm2</code>로 변경</li>\n<li>간단하지만 미루다 이제야 -> 진작 바꿀걸</li>\n<li>내가 쓰는건 start, monit, log 밖에 없지만 직접 로그 파일을 찾아보지 않아도 확인할 수 있다는게 가장 큰 편리함</li>\n<li><a href=\"https://engineering.linecorp.com/ko/blog/pm2-nodejs/\">pm2로 nodejs 무중단 서비스</a></li>\n<li>old_app 종료 -> 사용자 요청 -> fail -> new_app 실행: 배포하는 사이에 사용자 요청이 들어온 경우 응답 fail을 막고자 무중단 배포</li>\n<li>new_app 실행 -> 나 준비됬어! 신호 -> old_app 종료: 요청을 받을 준비가 되면 신호를 보내서 기존의 서버를 종료하는 방식</li>\n<li>서버가 실행하자마자 요청을 받을 준비가 되는게 아니기 때문에 요청받을 준비가 되면 기존 서버를 종료하는 것으로 무중단 서비스를 운영할 수 있도록한다</li>\n</ul>\n<h4 id=\"프론트엔드-테스트-코드가-필요한가\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BD%94%EB%93%9C%EA%B0%80-%ED%95%84%EC%9A%94%ED%95%9C%EA%B0%80\" aria-label=\"프론트엔드 테스트 코드가 필요한가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>프론트엔드 테스트 코드가 필요한가</code></h4>\n<ul>\n<li>필요할까\n<ul>\n<li>내가 작성한 코드의 안정성/자신감을 위해 테스트 필요</li>\n</ul>\n</li>\n<li><code>기능적 vs 시각적</code>\n<ul>\n<li>\n<pre><code>백엔드: input, output 모두 데이터\n프론트엔드: input - 이벤트, output - 시각화\n</code></pre>\n</li>\n<li>기존의 기능적 테스트를 유지 -> 테스트 코드에서 시각적 요소 의존성을 제거하여 기능을 위한 클래스명 또는 테스트를 위한 속성값 사용</li>\n<li>시각적 테스트를 위한 html, snapshot, 스크린샷 비교(ex.percy) -> 테스트 실행속도 느림, 의도가 명확하지 않아 문서화되지 않으므로 기능적 케이스 분리하고 시각적인 결과만을 확인</li>\n</ul>\n</li>\n<li><code>단위 vs 통합</code>\n<ul>\n<li>테스트는 작성, 유지보수, 실행 모두 비용이다</li>\n<li>복잡한 로직이 없는 단위 테스트는 제거하고 통합으로 포함시키며 로직이 복잡한 경우에만 단위테스트 실행</li>\n<li>컴포넌트 단위로 통합 테스트 실행하여 커버리지 향상</li>\n</ul>\n</li>\n<li>작성한 테스트가 신뢰할 수 있는지</li>\n<li>결국 테스트는 비용이고 시각적/기능적 테스트의 분리 필요</li>\n<li><code>storybook</code>: 컴포넌트를 여러 상황별로 만들어두고 시각적 테스트</li>\n<li><code>cypress</code>: 브라우저 내부에서 실행되며 TDD 가능</li>\n<li><a href=\"https://youtu.be/q9d631Nl0_4\">NHN 실용적인 프론트엔드 테스트 전략</a></li>\n</ul>\n<h4 id=\"web-dashboard\" style=\"position:relative;\"><a href=\"#web-dashboard\" aria-label=\"web dashboard permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>WEB Dashboard</code></h4>\n<ul>\n<li>개인 대시보드 프로젝트</li>\n<li>아파치에 포트를 추가하여 연결\n<pre><code>Listen ${PORT}\n&#x3C;VirtualHost :{PORT}>\n  DocumentRoot ${PROJECT_ROOT}\n  &#x3C;Directory ${PROJECT_ROOT}>\n    AllowOverride None\n    Require all granted\n  &#x3C;/Directory>\n&#x3C;/VirtualHost>\n</code></pre>\n</li>\n<li>타임존 추가: moment-timezone</li>\n</ul>\n<h4 id=\"jenkins\" style=\"position:relative;\"><a href=\"#jenkins\" aria-label=\"jenkins permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>Jenkins</code></h4>\n<ul>\n<li>드디어 서버에 설치</li>\n<li>디폴트 포트 8080을 9090으로 변경</li>\n<li><code>systemctl start jenkins.service</code>로 실행</li>\n<li>그러나 <code>Starting Jenkins bash: /usr/bin/java: No such file or directory</code> 라며 젠킨스 실행이 안됨</li>\n<li>jdk를 설치하고 <code>/usr/bin/java</code>안에 넣었는데도 같은 오류 발생 -> <code>which java</code>했더니 <code>/usr/bin/java/bin/java</code>라는 괴이한 경로를 반환</li>\n<li><code>vi /etc/init.d/jenkins</code> -> jdk 경로 추가 후 젠킨스 재실행</li>\n<li>여전히 실행이 되지 않고 있다...</li>\n<li><code>Jenkins requires Java versions [8, 11] but you are running with Java 13 from /usr/bin/java</code> -> 젠킨스에서는 jdk 8-11을 지원하는데 내가 설치한건 13이다</li>\n<li>Jdk 11을 다시 설치하고 재실행 -> 젠킨스가 드디어 떴다! 그러나 새로운 에러에 도착했다\n<pre><code>AWT is not properly configured on this server. Perhaps you need to run your container with \"-Djava.awt.headless=true\"? See also: https://jenkins.io/redirect/troubleshooting/java.awt.headless\n</code></pre>\n</li>\n<li>대응 1: tomcat 설치 -> cpu 폭등 -> 서버 굿바이</li>\n<li>대응 2: 서버를 다시 띄우고 jenkins start -> cpu 폭등 -> 한참을 기다리니 tomcat:8080 대신 jenkins:9090이 연결됨</li>\n<li>그러나 젠킨스만 돌리면 CPU 폭발 인스턴스 증설 필요 -> <code>젠킨스를 포기했다</code></li>\n</ul>\n<h4 id=\"29---215\" style=\"position:relative;\"><a href=\"#29---215\" aria-label=\"29   215 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2/9 - 2/15</h4>\n<ul>\n<li><code>하고 싶다, 해볼까, 할 수 있다</code> + <code>그럴 수 있지, 해야만 한다, 해내야 한다</code></li>\n<li>좋게 말하면 이전에는 자유로웠다면 이제는 책임을 갖게 되었다</li>\n<li>내 의지대로 하고 싶은것을 하며 능동적이였다면 이제는 피동적으로 해야만 하는 것들이 늘어가고 있다.</li>\n<li>장단점이 확실하게 있지만 도움이 될 부분들을 이번 프로젝트를 통해 얻을 수 있었다</li>\n</ul>\n<h4 id=\"22---28\" style=\"position:relative;\"><a href=\"#22---28\" aria-label=\"22   28 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2/2 - 2/8</h4>\n<h4 id=\"omf\" style=\"position:relative;\"><a href=\"#omf\" aria-label=\"omf permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>OMF</code></h4>\n<ul>\n<li>UI 개선</li>\n<li>데이터 구조 변경으로 마이그레이션 필요</li>\n<li>추후 카테고리 내용 분리하여 저장</li>\n</ul>\n<h4 id=\"graphql\" style=\"position:relative;\"><a href=\"#graphql\" aria-label=\"graphql permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>GraphQL</code></h4>\n<ul>\n<li>REST API에는 너무 많은 데이터가 내려온다 -> 필요한 데이터만 보내면 되는거 아닐까? -> 갑자기 다른 데이터도 보여줘야 한다 -> 백엔드 + 프론트 모두 다함께 수정 -> 개발 소요시간 증가</li>\n<li>수정사항마다 늘어나는 REST API를 줄이고자 GraphQL 도입해볼까</li>\n<li><code>REST API로 받아온 데이터를 GraphQL로 다듬어서 사용</code></li>\n<li>GraphQL은 클라이언트(인터넷)에서 사용할 수 있도록 개발 + Query이므로 어떤 프로그래밍언어에서도 동일한 방식으로 사용</li>\n<li>CRUD를 위한 <code>Query</code>, <code>Mutation</code> 타입과 소켓과 비슷한 <code>Subscription</code> 타입으로 구성</li>\n<li>Join이 될까? 관계형 DB에서 조인은 꼭 있어야하는데 GraphQL에서는 조인을 어떻게 하는 걸까</li>\n<li>쿼리에 Join은 따로 없으며 CRUD 쿼리를 만들고 조인이 필요한 쿼리에 리졸버를 생성하여 호출한다</li>\n<li>GraphQL에서도 REST API에서도 구현 가능 할 것으로 보여진다</li>\n<li>그렇다면 더 나은 방법일까?</li>\n</ul>","frontmatter":{"slug":"/blog/monthly-log/2020-02","date":"2020년 3월 1일","title":"2월 한달동안 로그","subtitle":"찾아보고, 읽어보고, 적어두기","tags":["log"]}}},"pageContext":{"id":"8a925e6b-67d5-5066-a5a8-b079ea8616d3","frontmatter__slug":"/blog/monthly-log/2020-02","__params":{"frontmatter__slug":"blog"}}},"staticQueryHashes":["3000541721","3293771174"],"slicesMap":{}}