{
    "componentChunkName": "component---src-pages-markdown-remark-frontmatter-slug-tsx",
    "path": "/blog/monthly-log/2020-11/",
    "result": {"data":{"markdownRemark":{"html":"<h2>11/29 ~ 11/30</h2>\n<h4><code>스크럼</code></h4>\n<ul>\n<li><code>에픽 -> 스토리 -> 작업</code> 카드를 생성했고 하위작업 카드에 맞춰 브랜치를 분기했다</li>\n<li>그런데 처음 계획과는 다르게 이번 릴리즈에 작업 일부분만 포함될 것 같다</li>\n<li>하위작업 내용을 이미 <code>develop</code>에 <code>merge</code>한 상황에서 일부분만 걸러내야하는지</li>\n<li>아니면 revert 커밋을 하고 새로 브랜치를 남겨둬야하는 것인지 고민이 된다</li>\n<li>앞으로 이런 일이 또 발생할 수 있기에 스토리에 대한 브랜치를 어떻게 준비할 지 생각해보았다</li>\n<li>스토리를 하나의 feature 브랜치로 보고 작업내용에 대한 서브 브랜치를 따로 시작하는건 어떨까</li>\n<li><code>커다란 feature 안에 작은 feature들이 여러개</code> 존재하게 되고 <code>merge 한 후 feature를 다시 develop으로 가는 것</code></li>\n<li>이는 작은 단위 작업에 대해 불필요하게 많은 PR이 생성될 것 같다</li>\n<li>커밋과 PR 단위를 작게 하는 것이 좋다라고 하지만 결국 하나의 스토리 개념이 있기에 좀 더 크게 묶어도 되지 않을까?</li>\n<li>다른 방안은 예전에 사용했던 방식인데 스토리에 대한 브랜치를 만들고 커밋내용으로 하위 작업 내용을 남기는 것</li>\n<li><code>feature/card-1</code> 브랜치 + <code>card-2 하위 작업 내용에 대한 커밋</code></li>\n<li>당연한 계획은 없었다 -> 언제 어떻게 변경 될 지 모르는 상황 -> 커밋, 브랜치에도 <code>스크럼</code></li>\n</ul>\n<h2>11/22 ~ 11/28</h2>\n<h4><code>스프린트</code></h4>\n<ul>\n<li><code>애자일, 스크럼, 스프린트</code></li>\n<li>애자일: 개발 -> 피드백 -> 개발 -> 피드백 전환을 짧고 빠르게 가져가는 방법론</li>\n<li>스프린트: 제품 기획부터 개발, 리뷰까지 한 사이클</li>\n<li>스크럼: 애자일 방법 중 하나로 팀을 이룬 팀원들 스스로 역할을 분배하고 책임</li>\n</ul>\n<h4><code>칸반</code></h4>\n<ul>\n<li>지라보드를 잘 사용해보고 싶은데 <code>에픽, 스토리, 작업, 버그</code> 차이점은 무엇일까</li>\n<li>에픽: 스토리의 집합</li>\n<li>스토리: 사용자의 행동, 기능</li>\n<li>작업: 스토리를 완성하기 위한 작업물</li>\n<li>버그: 오류 사항 발생</li>\n<li><code>에픽 > 스토리 > 작업</code> 그리고 <code>버그</code></li>\n<li>하나의 에픽을 스프린트로 가져가면서 릴리즈 처리가 가능해 보이는데 막상 사용이 어렵다</li>\n</ul>\n<h4><code>네트워크</code></h4>\n<ul>\n<li>공부한다고 했는데 여전히 아는게 무엇인지 찾을 수 없다</li>\n<li>게이트웨이, 서브넷 분명 들어보았고 알듯하지만 확실하지 않다 === 모른다</li>\n</ul>\n<h4><code>나만을 위한</code></h4>\n<ul>\n<li>하루를 4시30분에 시작한다라는 책을 보았다</li>\n<li>새벽에 일찍 일어나는 것에 의미가 있다기보다 오직 나만을 위한 시간을 보내기 위해 아침에 일찍 일어나 하루를 시작하는 것</li>\n<li>저녁에 야근하거나 약속을 잡거나 쉬고 싶다는 이유로 아무것도 하지 않거나 나중에 아쉬운 시간들을 보내는 경우가 많다</li>\n<li>작심삼일이지만 루틴을 만들어보겠다고 노력하지만 저녁시간은 내 뜻대로만 되지 않는다</li>\n<li>그럼 아침에 나를 위한 시간을 갖는다는 것은 좋은 방법인데!!!?</li>\n<li>최근 아무 생각 없이 수학문제를 푼다거나 공부하고 책보는게 재미있다</li>\n<li>그러다 <code>시험을 보는게 목적이 아닌 정말 학문을 위해 공부를 한 적이 있었던가?</code> 하는 생각을 해본다</li>\n</ul>\n<h2>11/15 ~ 11/21</h2>\n<h4><code>runtime error</code></h4>\n<ul>\n<li>타입스크립트 리팩터링을 진행했다</li>\n<li><code>1차 오류</code>를 여기서 심어버렸다</li>\n<li>타입스크립트로 바꾸면서 <code>이제 에러는 런타임이 아닌 컴파일에서 알 수 있겠지</code>라는 생각으로 바꾼 코드의 결과값만 테스트하였다</li>\n<li>사이드이펙트로 발생하는 것들이 있으리라고 생각치 못하고 기능 테스트를 하지 않았다</li>\n<li><code>2차 오류</code>는 혹시나 하며 지나친 것들이 역시나 하며 다가왔다</li>\n<li><code>useEffect dependency</code>가 빠져있는 것들을 추가하면서 의도치 않은 변경이 발생하였다</li>\n<li>두가지 오류 모두 미리 확인 할 수 있었고 예방 할 수 있었다</li>\n<li>그러나 나의 오판과 오만이 오히려 화가 되었다</li>\n<li>커밋 히스토리 마저도 지키지 못했다</li>\n<li>쉽게 보고 바로 release 브랜치를 열었는데 결국 다시 QA로 돌아왔으며 현재 히스토리는 갈 곳 잃은 거미줄이다</li>\n</ul>\n<h4><code>testing-library</code></h4>\n<ul>\n<li>유틸리티 함수만 테스트 코드를 작성했었다</li>\n<li>컴포넌트 테스트를 어떻게 하는건지 몰라서라는 핑계</li>\n<li>feconf, deview 여러 발표를 듣다보면 할 수 있을것만 같다</li>\n<li>coverage 측정</li>\n</ul>\n<h4><code>개발자</code></h4>\n<ul>\n<li>모름을 알고 있는 개발자</li>\n<li>주도적으로 시도해보고 생각해보는 개발자</li>\n</ul>\n<h2>11/8 ~ 11/14</h2>\n<h4><code>RN android</code></h4>\n<ul>\n<li>지난번부터 이상하게 나를 괴롭힌 이것</li>\n<li><code>java.lang.RuntimeException: Unable to load script. Make sure you're either running a Metro server (run 'react-native start') or that your bundle 'index.android.bundle' is packaged correctly for release.</code></li>\n<li><code>react-native run-android</code>하면 앱이 그냥 죽어버린다</li>\n<li><code>android/app/build.gradle</code>에 <code>bundleInDebug: true</code>을 추가해보았다</li>\n<li>실행은 되는데 <code>flipper</code>가 연결되지 않는걸 보니 debug mode가 아닌듯하다</li>\n<li>결국 debug 실행에도 bundle을 사용하겠다는 것인데... 새로 만든 프로젝트에서는 되는걸 보니 나의 기존 프로젝트들이 모두 문제가 생긴건가봐...</li>\n<li>MainApplication.java <code>import com.facebook.react.BuildConfig;</code>이 차이점</li>\n<li>이걸 지우고 나니 연결이 잘 되는 것을 확인!!!</li>\n<li>언제부터였을까 아마 RN 업데이트 과정에서 누락된 것 같다</li>\n</ul>\n<h4><code>typescript</code></h4>\n<ul>\n<li>interface와 type 어떤걸</li>\n<li>라이브러리들이 아직 타입이 지원되지 않은 것들이 종종 발견되고 있다</li>\n</ul>\n<h4><code>린 스타트업</code></h4>\n<ul>\n<li>스타트업 = 조직 = 관리</li>\n</ul>\n<h4><code>circleci</code></h4>\n<ul>\n<li>동일한 circleci 설정이 적용되지 않는다... 왜?</li>\n</ul>\n<h4><code>개발자</code></h4>\n<ul>\n<li>개발자로써의 자세</li>\n<li>스스로 찾아보고 해보고 공부하는 것</li>\n</ul>\n<h4><code>사람</code></h4>\n<ul>\n<li>사람들이 다른 길을 간다</li>\n<li>사람들이 만족하지 못하고 무언가 문제가 있으나 해결될 수 없음을 느낄때</li>\n<li>정작 문제가 되는 것들은 그대로 있다</li>\n</ul>\n<h4><code>집무실</code></h4>\n<ul>\n<li>퇴근 후 조금이나마 공부하려는 습관이 적응되기 딱 좋은 기회인것 같다</li>\n<li>우연하게 독서실을 찾던 중 발견한 공유오피스 이벤트</li>\n<li>한달동안 이용할 수 있는 기회를 얻었고 정말 조금이라도 하는 습관이 익숙해지면 좋겠다</li>\n<li>분위기도 조성되고 동기부여도 있고 하면 된다</li>\n</ul>\n<h4><code>피드백</code></h4>\n<ul>\n<li>명확한 피드백은 더하고 사적인 감정은 빼고</li>\n<li><a href=\"https://youtu.be/51boqGNfH_8\">EO 유튜브</a></li>\n</ul>\n<h2>11/1 ~ 11/7</h2>\n<h4><code>서점</code></h4>\n<ul>\n<li>퇴근길 배가 안고파서 들린 서점에서 두시간동안 책을 봤다</li>\n<li>피곤했었는데 오히려 시간이 금방 지나가버린 시간</li>\n</ul>\n<h4><code>feconf</code></h4>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=L1dtkLeIz-M\">프론트엔드 TDD에 대한 영상</a></li>\n<li>쉽게 쉽게 적용하는걸 보니 해보고 싶은 욕심이 가득찬다</li>\n</ul>\n<h4><code>typescript</code></h4>\n<ul>\n<li>reducer를 ts로 마이그레이션 진행</li>\n<li>or 조건으로 타입을 주면 될거라 생각했는데 오히려 and 조건을 받고있다 왜?</li>\n<li>reducer, saga, action 등 각각의 타입들을 어떻게 정리하면 좋을까</li>\n<li>유명한 타입스크립트 라이브러리 참고 해볼까</li>\n<li>마이그레이션 하다보니 숨겨진 타입에러들을 발견하는 보물찾기 같은 재미가 쏙쏙</li>\n</ul>","frontmatter":{"slug":"/blog/monthly-log/2020-11","date":"2020년 12월 4일","title":"11월 한달동안 로그"}}},"pageContext":{"id":"206b489d-5de8-5747-a48a-130f0259e37e","frontmatter__slug":"/blog/monthly-log/2020-11","__params":{"frontmatter__slug":"blog"}}},
    "staticQueryHashes": ["3000541721","3293771174"]}