{
    "componentChunkName": "component---src-pages-markdown-remark-frontmatter-slug-tsx",
    "path": "/blog/monthly-log/2021-05/",
    "result": {"data":{"markdownRemark":{"html":"<h2 id=\"524--531\" style=\"position:relative;\"><a href=\"#524--531\" aria-label=\"524  531 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>5/24 ~ 5/31</code></h2>\n<h4 id=\"reduce\" style=\"position:relative;\"><a href=\"#reduce\" aria-label=\"reduce permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>reduce</code></h4>\n<ul>\n<li><code>map + filter = reduce</code></li>\n<li>이런 상황이면 다 reduce로 한번에 처리하도록 신경을 써보았다</li>\n<li>나름 루프 한번으로 해결해보고자 했는데</li>\n<li>오히려 내부 변수 수두룩</li>\n<li>push, set, get</li>\n<li>그러다보면 읽기 어려운, 다시 보기 힘든 코드가 되어버린다</li>\n<li><code>좋은 의도를 가지고 시도해보았는데</code></li>\n<li>결과는 좋기만 하지는 않다</li>\n<li>비슷한? 그런 고민거리 또 하나</li>\n<li>컴포넌트에 padding을 시안에 명시된 수치값을 정확하게 주고 다른 레이아웃을 맞추는게 좋을까</li>\n<li>레이아웃에 해당하는 수치를 나눠서 최대한 컴포넌트를 동일하게 만드는게 좋을까</li>\n<li>결국 디자인 시안과 다른 수치값이 들어가 있으면 나중에 관리하기 더 힘들다</li>\n<li>그리고 공통컴포넌트라고 만들었지만 그 내부에는 수많은 조건 처리가 되어갈뿐</li>\n<li><code>최대한 기본만 갖고 있도록</code> 그리고 수치는 작게 쪼개지 말아야겠다</li>\n</ul>\n<h4 id=\"노션\" style=\"position:relative;\"><a href=\"#%EB%85%B8%EC%85%98\" aria-label=\"노션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>노션</code></h4>\n<ul>\n<li>잘못눌러서 5월동안 기록이 날아가버렸다</li>\n<li>까아아아암짝 놀래서 실행취소했지만 핸드폰으로는 이미 돌이킬수없었다</li>\n<li>망했다 생각하고 와이파이 끄고 맥북으로 열었지만 어찌나 동기화가 잘 되어있던지...</li>\n<li>여기도 날아가버렸다</li>\n<li>정말 다행스럽게도.. 업데이트 기록이 남아있어서 날려버린 데이터 다시 긁어와서 살릴 수 있었다</li>\n<li>프로 요금제를 쓰라는 의미인가</li>\n</ul>\n<h4 id=\"realm\" style=\"position:relative;\"><a href=\"#realm\" aria-label=\"realm permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>realm</code></h4>\n<ul>\n<li>마이그레이션하면서 기존에 사용하던 필드 삭제</li>\n<li>근데 해당 필드가 없는 버전에서 오류가 발생하였다</li>\n<li>없는 필든데 삭제하라고 하니 오류가 발생한다고?!</li>\n<li>이해는 되는데 그냥 유연하게 삭제해주면 좋을텐데</li>\n<li>안전하지 않은가보다</li>\n</ul>\n<h4 id=\"js-bundle\" style=\"position:relative;\"><a href=\"#js-bundle\" aria-label=\"js bundle permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>js bundle</code></h4>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=EP7g5R-7zwM&#x26;list=PL1DJtS1Hv1PiGXmgruP1_gM2TSvQiOsFL&#x26;index=20\">토스 컨퍼런스: js 번들 사이즈 줄이기</a></li>\n<li>node_modules가 종종 거대해져서 프로젝트 폴더가 처음 받았을때보다 엄청 커진 것을 볼 수 있다</li>\n<li>프로젝트에서 사용하고 있는 dependency가 또 다른 dependency를 그리고 또 다른 dependency를 바라보면서 많이 본 블랙홀 보다 빠져나올 수 없는 node_module이 되어버린다</li>\n<li>같은 A라는 라이브러리를 의존하고 있더라도 semver가 다른 경우 각각의 라이브러리가 자신의 node_modules에 원하는 버전을 받아서 사용하게 된다</li>\n<li><code>yarn dedupelicate</code>으로 중복된 버전의 라이브러리를 최소화해본다</li>\n<li>그리고 꼭 필요한 부분만 <code>import</code>한다 (import * as all from 'lodash' 이런 형태를 지양한다)</li>\n<li><code>lodash</code>를 정말 잘 쓰고 있었는데 <code>라이브러리의 사이즈가 크고 js 기본 함수로 구현이 가능한 것을 외부 라이브러리를 사용해서까지 할 필요가 없다</code>라는 의견</li>\n<li>당연하지만 편리함에 고민하지 않은 부분들</li>\n<li>번들 사이즈를 이야기하다보니 ts를 js로 컴파일 했을떄 enum이 떠오른다</li>\n<li><a href=\"https://engineering.linecorp.com/ko/blog/typescript-enum-tree-shaking/\">enum은 tree-shaking이 되지 않아 항상 js 번들에 포함된다</a></li>\n<li>이 또한 편리함이였는데 고민을 해봐야지</li>\n</ul>\n<h2 id=\"517--523\" style=\"position:relative;\"><a href=\"#517--523\" aria-label=\"517  523 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>5/17 ~ 5/23</code></h2>\n<h4 id=\"rn-timers\" style=\"position:relative;\"><a href=\"#rn-timers\" aria-label=\"rn timers permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>RN Timers</code></h4>\n<ul>\n<li>일반적으로 알고 있는 setTimeout과 RN의 setTimeout이 다르다고? 왜!</li>\n<li><a href=\"https://evan-moon.github.io/2019/08/01/nodejs-event-loop-workflow/\">참고: setImmedate와 이벤트 루프</a></li>\n<li>애니메이션과 네이티브 이벤트가 얽혀있는 하나의 액션에서 setTimeout으로 지연시키고자하였다</li>\n<li>렌더 후 네이티브 이벤트가 발생하고 그 이벤트에서 애니메이션을 주고 이 작업이 mount/unmount 연속해서 발생한다</li>\n<li>당연히 이전 페이지의 unmount가 되면서 다음 페이지의 mount가 되면 좋겠지만 unmount가 fadeout으로 mount보다 더 늦게 발생하면서 문제가 생겼다</li>\n<li><a href=\"https://github.com/facebook/react-native/blob/dc80b2dcb52fadec6a573a9dd1824393f8c29fdc/Libraries/Core/Timers/JSTimers.js#L209\">RN 내부 구현되어 있는 setTimeout</a></li>\n<li>따라가보니 setTimeout을 NativeTiming.createTimer에 있고 이건 BatchedBridge로 나아가는데..??</li>\n<li>왜 이게 이렇게 연결이 되는거지</li>\n<li><a href=\"https://reactnative.dev/docs/timers#timers\">RN Timers</a></li>\n<li><code>setImmediate</code>가 현재 실행되고 있는 <code>js에서 native로 넘어가기 직전</code>에 호출된다</li>\n<li>왜 native 넘어간다는 내용이 있을까?</li>\n<li><a href=\"https://devh.kr/2020/How-React-Native-Works/\">참고: RN thread</a></li>\n<li><code>JS 스레드의 각 이벤트 루프 끝에서 네이티브 뷰 업데이트가 전달되며 마지막에 UI 스레드에서 실행된다</code></li>\n<li>그럼 우리가 마주했던 문제 <code>js 이벤트 -> 네이티브 뷰 업데이트</code></li>\n<li>setTimeout으로 보냈다면 js 렌더링이 끝나고 네이티브 뷰 업데이트까지 완료된 다음 이벤트 루프가 돌면서 처리되었을것이다</li>\n<li>이걸 setImmediate로 변경해서 네이티브 뷰 업데이트로 넘어가기 전에 코드를 실행해주는 것</li>\n</ul>\n<h4 id=\"그냥-그렇다\" style=\"position:relative;\"><a href=\"#%EA%B7%B8%EB%83%A5-%EA%B7%B8%EB%A0%87%EB%8B%A4\" aria-label=\"그냥 그렇다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>그냥 그렇다</code></h4>\n<ul>\n<li>자식같은 마음으로 듬뿍 애정 담아 시작한 프로젝트</li>\n<li>그것이 무슨 이유가 있어서 밀리게 되거나 중지 되거나 엎어지는 경우</li>\n<li>이유가 정말 이해는 가는데 그냥 마음이 슬프다</li>\n<li>공허한 느낌이랄까</li>\n<li>최근 어쩌다보니 겪었고 보았다</li>\n<li>그냥 마음 한편 애정을 쏟은 무언가가 떠나버리는 것 같아 아쉬울뿐</li>\n<li>있을때잘해줄걸</li>\n<li>다시하지뭐</li>\n</ul>\n<h2 id=\"510--516\" style=\"position:relative;\"><a href=\"#510--516\" aria-label=\"510  516 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>5/10 ~ 5/16</code></h2>\n<h4 id=\"ios-인증서\" style=\"position:relative;\"><a href=\"#ios-%EC%9D%B8%EC%A6%9D%EC%84%9C\" aria-label=\"ios 인증서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>iOS 인증서</code></h4>\n<ul>\n<li>갑자기 질문을 받았는데 말끔한 대답을 못하는게 역시나 모르는게 분명하다</li>\n<li><code>키체인에 iOS Developer 인증서가 신뢰할 수 없다고 뜨는데 왜 그런거에요?</code></li>\n<li>분명 그런 메세지를 나도 전에 본 적이 있었다</li>\n<li>그러나 정리해두지 않았는지 결국 또 잊어버렸다</li>\n<li>인증서를 생성하고 등록하고 다운 받고 키체인에 던졌는데....</li>\n<li>그래서 돌아보는 나의 인증서</li>\n<li>애플 개발자 센터에는 <code>Membership</code>과 <code>Certificates, Identifiers &#x26; Profiles</code>을 보는데(내가 그렇게 본다)</li>\n<li>Membership에는 개발자 계정 1년마다 등록하는 그것에 관련한 내용이 있다</li>\n<li>그리고 여기서 발급받은 나의 Team ID가 앱 빌드하고 배포하는데 따라다닌다</li>\n<li>가장 어려운.. 문제의 <code>Certificates, Identifiers &#x26; Profiles</code>에는 <code>Certificates, Identifiers, Devices, Profiles, Keys, More</code> 탭이 있다</li>\n<li>Profiles에는 하나의 Provisioning Profile이 있는데 아마도 애플 로그인 기능을 사용하려고 만든 것 같다</li>\n<li>Identifiers에서 앱의 기능을 추가하거나 변경하면? Profiles에서 Provisioning을 다시 만들고 다운받아서 xcode에 던진다!??? (기억이 안난다)</li>\n<li><a href=\"https://medium.com/jinshine-%EA%B8%B0%EC%88%A0-%EB%B8%94%EB%A1%9C%EA%B7%B8/%EC%BD%94%EB%93%9C%EC%82%AC%EC%9D%B4%EB%8B%9D-%EC%9D%B8%EC%A6%9D%EC%84%9C-%ED%94%84%EB%A1%9C%EB%B9%84%EC%A0%80%EB%8B%9D-%ED%94%84%EB%A1%9C%ED%8C%8C%EC%9D%BC%EC%9D%B4%EB%9E%80-2bd2c652d00f\">참고: iOS 인증서</a></li>\n</ul>\n<h4 id=\"네이밍\" style=\"position:relative;\"><a href=\"#%EB%84%A4%EC%9D%B4%EB%B0%8D\" aria-label=\"네이밍 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>네이밍</code></h4>\n<ul>\n<li>혼자 알아봐서 뭐하니!!!!!!!!!</li>\n<li>네이티브 하기 전에 네이밍 좀</li>\n</ul>\n<h2 id=\"53--59\" style=\"position:relative;\"><a href=\"#53--59\" aria-label=\"53  59 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>5/3 ~ 5/9</code></h2>\n<h4 id=\"rn-kakao--fbsdk--flipper\" style=\"position:relative;\"><a href=\"#rn-kakao--fbsdk--flipper\" aria-label=\"rn kakao  fbsdk  flipper permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>rn kakao + fbsdk + flipper</code></h4>\n<ul>\n<li>\n<p>package.json</p>\n<pre><code class=\"language-ruby\">\"@react-native-seoul/kakao-login\": \"^3.0.6\",\n\"react-native-fbsdk-next\": \"^4.0.0\",\n</code></pre>\n</li>\n<li>\n<p>각자 자기 주장하느라 빌드 실패!</p>\n<ul>\n<li>\n<p>kakao 버전을 올리고 fbsdk를 붙였더니 시작된 오류</p>\n<ul>\n<li>안드로이드는 무사함</li>\n</ul>\n</li>\n<li>\n<p>kakao → podfile platform minimum version 11.0 요구</p>\n<pre><code class=\"language-ruby\">[!] The platform of the target `omf` (iOS 10.0) may not be compatible with `KakaoSDK (2.4.1)` which has a minimum requirement of iOS 11.0.\n</code></pre>\n</li>\n<li>\n<p>platform version 11.0 flipper에서 오류나길래 버전업 시도해봄</p>\n<pre><code class=\"language-ruby\">\"react-native-flipper\": \"^0.87.0\",\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p>그래도 해결되지 않아서 차분하게 모든걸 정리해가면서 시도하고자함!</p>\n<ul>\n<li>모든 테스트는 Podfile.lock을 지우고 yarn pod + clean build</li>\n</ul>\n</li>\n<li>\n<p>[v1] <code>platform :ios, '11.0'</code> + <code>pod 'Alamofire'</code></p>\n<pre><code class=\"language-ruby\">require_relative '../node_modules/react-native/scripts/react_native_pods'\nrequire_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'\n\nplatform :ios, '11.0'\n\ntarget 'omf' do\n  config = use_native_modules!\n  use_react_native!(\n    :path => config[:reactNativePath],\n    :hermes_enabled => false\n  )\n  pod 'Alamofire'\n\n  target 'omfTests' do\n    inherit! :complete\n  end\n\n  use_flipper!()\n\n  post_install do |installer|\n    react_native_post_install(installer)\n  end\nend\n</code></pre>\n<pre><code class=\"language-ruby\">Compile FlipperRSocketResponder.cpp\n\nTypedef redefinition with different types ('uint8_t' (aka 'unsigned char') vs 'enum clockid_t')\n</code></pre>\n<ul>\n<li>platform 10.0에서 해결하려고 했더니 Alamofire가 pod install이 안되서 직접 추가해주었으나 결국 kakao minimum verion으로 해결이 되지 않아서 11.0으로 올리고 재시도</li>\n</ul>\n</li>\n<li>\n<p>[v2] <code>platform :ios, '11.0'</code></p>\n<pre><code class=\"language-ruby\">require_relative '../node_modules/react-native/scripts/react_native_pods'\nrequire_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'\n\nplatform :ios, '11.0'\n\ntarget 'omf' do\n  config = use_native_modules!\n  use_react_native!(\n    :path => config[:reactNativePath],\n    :hermes_enabled => false\n  )\n\n  target 'omfTests' do\n    inherit! :complete\n  end\n\n  use_flipper!()\n\n  post_install do |installer|\n    react_native_post_install(installer)\n  end\nend\n</code></pre>\n<pre><code class=\"language-ruby\">Compile FlipperRSocketResponder.cpp\n\nTypedef redefinition with different types ('uint8_t' (aka 'unsigned char') vs 'enum clockid_t')\n</code></pre>\n<ul>\n<li>platform 11.0에서는 Alamofire가 잘 설치되니깐 직접 추가하지 않아도 된다고 생각해서 지우고 다시 시도</li>\n</ul>\n</li>\n<li>\n<p>[v3] <code>platform :ios, '11.0'</code> + <code>use_flipper</code></p>\n<ul>\n<li>계속 동일하게 flipper에서 오류가 나길래 찾아보니 최근 등록되어있는 깃헙 이슈 참고해서 flipper 버전을 명시하고 시도</li>\n<li><a href=\"%5Bhttps://github.com/facebook/flipper/issues/2215%5D(https://github.com/facebook/flipper/issues/2215)\">flipper 오류 깃헙 이슈</a></li>\n<li><a href=\"%5Bhttps://github.com/facebook/flipper/issues/2215#issuecomment-828837100%5D(https://github.com/facebook/flipper/issues/2215#issuecomment-828837100)\">flipper version 명시</a></li>\n<li>엥!?\n<ul>\n<li>build 성공하는가 싶더니!</li>\n<li>AppDelegate 문법 오류를 뱉어낸다</li>\n<li>드디어.... 코드를 읽긴했구나 하는 기쁜마음으로 수정하고 다시 돌리니 성공!!!!</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>kakao 라이브러리를 업데이트하고 fbsdk를 추가하겠다고 처음 커밋한 2021-03-27...</p>\n</li>\n<li>\n<p>한달이 충분히 지나고 나서야 드디어 빌드 성공</p>\n</li>\n<li>\n<p>단순하게 platform 버전이 문제라고 생각했는데 범인은 flipper</p>\n<ul>\n<li>처음엔 오류메세지가 저게 아니였는데...</li>\n<li><code>react-native-flipper</code>를 업데이트해서 그런가!?</li>\n<li>어쨌든 최종 오류는 flipper!</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"클린코드\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%A6%B0%EC%BD%94%EB%93%9C\" aria-label=\"클린코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>클린코드</code></h4>\n<ul>\n<li>클린코드 != 짧은코드</li>\n<li>원하는 목적을 빠르게 찾을 수 있도록</li>\n<li>목적에 따라 하나의 기능만 하도록 분리</li>\n<li>동일한 목적에 따른 상세 기능이 흩뿌려지지 않도록 응집</li>\n<li>핵심 정보를 뭉쳐서 hook으로 숨기면 다시 찾아야해서 오히려 안티패턴</li>\n<li><code>선언적 프로그래밍</code> => 이미 구현된 함수에 <code>무엇</code>을 해야하는지만 전달</li>\n<li>선언적 프로그래밍 내부는 결국 명령형으로 하나하나 전달하고 있긴한데...</li>\n<li>하나의 목적을 갖는</li>\n<li>이름만으로도 주요 목적을 알 수 있는 네이밍🙈</li>\n<li>중요 코드만 남기고 추상화</li>\n<li>동일한 레벨의 추상화 처리</li>\n<li><a href=\"https://youtu.be/edWbHp_k_9Y\">토스 slash21 클린코드</a></li>\n</ul>\n<h2 id=\"51--52\" style=\"position:relative;\"><a href=\"#51--52\" aria-label=\"51  52 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>5/1 ~ 5/2</code></h2>\n<h4 id=\"테스트-커버리지\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BB%A4%EB%B2%84%EB%A6%AC%EC%A7%80\" aria-label=\"테스트 커버리지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>테스트 커버리지</code></h4>\n<ul>\n<li>함수 하나를 여러 조건에 대해 모든 테스트를 작성했던적이 있다</li>\n<li>그리고 그 테스트 파일은 수천줄이 되었었다</li>\n<li>리팩터링을 통해 중복을 줄이고 조건들을 모두 플래그 값으로 반복시켜서 처리했던 기억이 있다</li>\n<li>이 테스트 코드는 이후 나의 든든한 지원군이 되어주었다</li>\n<li>운영하다가 추가되는 기능에 대해 사용자에게는 아주 사소한 변화이지만 내부적으로는 수많은 조건에 따른 영향이 있었다</li>\n<li>그럴때 이 테스트 코드가 나에게 안정감을 주면서 기능개발을 할 수 있도록 해주었다</li>\n<li>아마 테스트 코드가 없었다면 모든 조건을 전부 하나씩 테스트해야만 했을 것이다!</li>\n<li>지금 생각해보면 이게 단위테스트를 하고 TDD가 자연스럽게 이뤄진게 아닐까</li>\n<li><a href=\"/blog/monthly-log/2020-12\">그 당시의 한달동안</a></li>\n<li>그리고 최근에 <a href=\"https://www.youtube.com/watch?v=jdlBu2vFv58\">토스 slash21 테스트 커버리지 100%</a> 를 정말 관심있게 보았다</li>\n<li>테스트 커버리지를 높여보고자 시도했지만 컴포넌트를 조건별로 테스트하기가 너무 까다로웠기에 100%를 원한다기보다는 중요한 함수에 대한 처리를 하고자하였다</li>\n<li>해당 내용에서는 테스트 커버리지가 낮아지는 경우 빌드 실패하도록 하여 항상 커버리지가 높아지도록 하였다고 한다</li>\n<li>멋진걸!</li>\n<li>그리고 테스트는 빨라야한다고 한다!</li>\n<li>push hook으로 테스트를 실행하고 있는데 수천줄이 되는 테스트를 실행하는 것은 너무 느렸다...</li>\n<li>이걸 빌드 실패하도록?(더 후반부로 옮기기에는) 이미 테스트에 실패한 코드가 푸시가 되어버리는게 마음이 좋지 않다...</li>\n<li>어떻게 하면 코드가 안정적으로 유지되고 테스트가 빠르게 실행될 수 있을까</li>\n<li>변경된 파일에 연관된 테스트만 실행한다면?</li>\n</ul>","frontmatter":{"slug":"/blog/monthly-log/2021-05","date":"2021년 6월 3일","title":"5월 한달동안 로그"}}},"pageContext":{"id":"5c8c3ec7-fa6d-571d-9023-774de09f9c4d","frontmatter__slug":"/blog/monthly-log/2021-05","__params":{"frontmatter__slug":"blog"}}},
    "staticQueryHashes": ["3000541721","3293771174"]}