{"componentChunkName":"component---src-pages-markdown-remark-frontmatter-slug-tsx","path":"/blog/monthly-log/2022-03/","result":{"data":{"markdownRemark":{"html":"<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EC%9D%BD%EC%96%B4%EB%B3%B4%EC%95%98%EB%8D%98\"><code>읽어보았던</code></a></li>\n<li><a href=\"#327--331\"><code>3/27 ~ 3/31</code></a>\n<ul>\n<li>\n<ul>\n<li><a href=\"#%EC%89%BC\"><code>쉼</code></a></li>\n<li><a href=\"#fabric\"><code>fabric</code></a></li>\n<li><a href=\"#%ED%91%9C%ED%98%84%EC%8B%9D\"><code>표현식</code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#320--326\"><code>3/20 ~ 3/26</code></a>\n<ul>\n<li>\n<ul>\n<li><a href=\"#%ED%83%80%EC%9E%85\"><code>타입</code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#313--319\"><code>3/13 ~ 3/19</code></a>\n<ul>\n<li>\n<ul>\n<li><a href=\"#%ED%94%BD%EC%85%80\"><code>픽셀</code></a></li>\n<li><a href=\"#react-docs-hooks\"><code>React Docs: Hooks</code></a></li>\n<li><a href=\"#useref\"><code>useRef</code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#36--312\"><code>3/6 ~ 3/12</code></a>\n<ul>\n<li>\n<ul>\n<li><a href=\"#bff\"><code>BFF</code></a></li>\n<li><a href=\"#svg\"><code>SVG</code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#31--35\"><code>3/1 ~ 3/5</code></a>\n<ul>\n<li>\n<ul>\n<li><a href=\"#%EA%B9%83%ED%97%99-%EC%95%A1%EC%85%98\"><code>깃헙 액션</code></a></li>\n<li><a href=\"#viewport\"><code>viewport</code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</div>\n<h2 id=\"읽어보았던\" style=\"position:relative;\"><a href=\"#%EC%9D%BD%EC%96%B4%EB%B3%B4%EC%95%98%EB%8D%98\" aria-label=\"읽어보았던 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>읽어보았던</code></h2>\n<ul>\n<li><a href=\"https://toss.tech/article/faster-initial-rendering\">조금만 신경써서 초기 렌더링 빠르게 하기 (https://toss.tech)</a>\n<ul>\n<li>렌더링 개선해야하는데 잘 안되고 있다</li>\n<li>그러다 흘러들어간 포스팅</li>\n<li>웹 어플리케이션을 타켓으로 설명하고 있지만 혹시 도움을 얻을만한 것이 있을까하며</li>\n<li>초기 렌더타임에 그려줄 수 있는 것을 그려주는 것이 포인트라고 생각한다</li>\n<li>이것을 이미 스켈레톤으로 보여주고 있는데, 애초에 너무 많은 것을 담으려고 하고 있어 퍼포먼스 자체가 나오지 않는다...</li>\n<li>대응할 수 없어서 슬픈 이야기</li>\n</ul>\n</li>\n<li><a href=\"https://ui.toast.com/weekly-pick/ko_20220323\">타입스크립트 never (https://ui.toast.com)</a>\n<ul>\n<li>실제로는 써본적이 없는데 타입챌린지 하면서 가장 많이 쓰게 된 <code>never</code></li>\n<li><code>타입스크립트에서 never 타입은 값의 공집합이다. > 집합에 어떤 값도 없기 때문에, never 타입은 any 타입의 값을 포함해 어떤 값도 가질 수 없다</code></li>\n<li><a href=\"https://ui.toast.com/weekly-pick/ko_20220323#switch-if-else-%EB%AC%B8%EC%9D%98-%EB%AA%A8%EB%93%A0-%EC%83%81%ED%99%A9%EC%9D%84-%EB%B3%B4%EC%9E%A5%ED%95%9C%EB%8B%A4\">남아있는 것은 never이다</a> -> 엄격하게... 조건 처리</li>\n<li><a href=\"https://ui.toast.com/weekly-pick/ko_20220323#%EC%9D%B4%EB%A1%A0%EC%A0%81%EC%9C%BC%EB%A1%9C-%EB%8F%84%EB%8B%AC%ED%95%A0-%EC%88%98-%EC%97%86%EB%8A%94-%EB%B6%84%EA%B8%B0%EB%A5%BC-%ED%91%9C%EA%B8%B0%ED%95%9C%EB%8B%A4\">절대 도달하지 못하는 곳은 never</a></li>\n<li>그 외에 유니온, 키값으로 never 타입을 사용해 없애버릴 수 있다는 것이 유용했다</li>\n<li><a href=\"https://ui.toast.com/weekly-pick/ko_20220323#never-%ED%83%80%EC%9E%85%EC%9D%80-%EC%96%B4%EB%96%BB%EA%B2%8C-%EA%B2%80%EC%82%AC%ED%95%A0%EA%B9%8C\">문제의 never는 never</a></li>\n<li>never를 할당하려하면 그건 never라서 never가 나온다 🙈</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"327--331\" style=\"position:relative;\"><a href=\"#327--331\" aria-label=\"327  331 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>3/27 ~ 3/31</code></h2>\n<h4 id=\"쉼\" style=\"position:relative;\"><a href=\"#%EC%89%BC\" aria-label=\"쉼 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>쉼</code></h4>\n<ul>\n<li>처음 긴 휴가</li>\n<li>이것저것 해보고 싶었는데 맘에 드는 날씨가 3분의 1 정도 있었다</li>\n<li>그건 핑계일까</li>\n<li>그냥 쉬었다 쉬고 쉬고</li>\n<li>휴가를 휴가답게 휴식 휴식 휴식 했으니 끌어올려야지</li>\n</ul>\n<h4 id=\"fabric\" style=\"position:relative;\"><a href=\"#fabric\" aria-label=\"fabric permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>fabric</code></h4>\n<ul>\n<li><code>0.68.0-rc.4</code> 도입해보려고 했더니 바로 <code>0.68.0</code> 이 나와버렸네</li>\n<li>c++로 동작하는데 RNStarter는 코틀린, 스위프트...</li>\n<li>특히나 스위프트 AppDelegate에 적용하는게 까다롭겠는데</li>\n<li>브릿지를 새로 만들어야하려나</li>\n<li><a href=\"https://jk2b.tistory.com/m/5\">참고</a></li>\n</ul>\n<h4 id=\"표현식\" style=\"position:relative;\"><a href=\"#%ED%91%9C%ED%98%84%EC%8B%9D\" aria-label=\"표현식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>표현식</code></h4>\n<ul>\n<li><a href=\"https://twitter.com/radexp/status/1508543569379958787?t=JcwBx2vbM-EbfLWjXJYkeQ&#x26;s=19\">falsy &#x26;&#x26; jsx 표현식</a></li>\n<li>이러면 앱이 죽는다!!!</li>\n<li><code>0 &#x26;&#x26; &#x3C;Comp /></code>는 문제가 될 수 있으니 항상 불리언으로 처리해주어야하는데</li>\n<li><code>조건 ? &#x3C;Comp /> : null</code> 은 명확하게 보이기는 하는데 개인적으로 좋아하지 않는다.. 🤔</li>\n</ul>\n<h2 id=\"320--326\" style=\"position:relative;\"><a href=\"#320--326\" aria-label=\"320  326 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>3/20 ~ 3/26</code></h2>\n<h4 id=\"타입\" style=\"position:relative;\"><a href=\"#%ED%83%80%EC%9E%85\" aria-label=\"타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>타입</code></h4>\n<ul>\n<li>typechallenge 하다보니 다시 찾아보게 되는 타입</li>\n<li><code>key in (End &#x26; string)</code>\n<pre><code class=\"language-ts\">type TupleToNestedObject&#x3C;T, U, R = U> = T extends [...infer Start, infer End] ? End extends string ? TupleToNestedObject&#x3C;Start, U, {\n  [key in End]: R\n}> : R : R\n\n=>\n\ntype TupleToNestedObject&#x3C;T, U, R = U> = T extends [...infer Start, infer End] ? TupleToNestedObject&#x3C;Start, U, {\n\t[key in (End &#x26; string)]: R\n}> : R\n</code></pre>\n<ul>\n<li>End 의 유니온 키값으로 뽑아낸 key 가 string 타입이라고 보장해주었다</li>\n<li><code>key in End</code> 만 했을때, key가 어떤 타입인지 알 수 없는데 이 값을 키값으로 사용하려고 하면 타입 오류가 발생하니깐</li>\n</ul>\n</li>\n<li><code>K in keyof T as T[K] extends U ? K : never</code>\n<pre><code class=\"language-ts\">type PickByType&#x3C;T, U> = {\n  [K in keyof T as T[K] extends U ? K : never]: T[K]\n}\n\n=>\n\ntype PickByType&#x3C;T extends Record&#x3C;string, unknown>, U> = {\n  [K in (keyof T &#x26; string) as (T[K] extends U ? K : never)]: T[K]\n}\n</code></pre>\n<ul>\n<li><code>K in keyof T</code>로 뽑아낸 키를 <code>T[K] extends U ? K : never</code> 타입으로 assertion 해준 것\n<ul>\n<li>키값을 never가 들어가면 해당 키는 없는 맵이다</li>\n<li>제네릭 타입을 정의했더니 위의 타입 케이스와 유사하게 만들 수 있었다</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"313--319\" style=\"position:relative;\"><a href=\"#313--319\" aria-label=\"313  319 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>3/13 ~ 3/19</code></h2>\n<h4 id=\"픽셀\" style=\"position:relative;\"><a href=\"#%ED%94%BD%EC%85%80\" aria-label=\"픽셀 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>픽셀</code></h4>\n<ul>\n<li><a href=\"https://brunch.co.kr/@euid/6\">문제의 0.5px</a>\n<ul>\n<li>디바이스가 400ppi 라면 1인치에 400픽셀이 찍히지만 600ppi 라면 1인치에 600픽셀이 찍힌다\n<ul>\n<li>여기서 픽셀은 물릭적인 디바이스가 표현할 수 있는 픽셀</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"https://brunch.co.kr/@eeasily/17\"><code>픽셀의 밀도가 다르다</code></a></li>\n<li>그래서 같은 40px을 그리더라도 디바이스마다 밀도가 다르기 때문에 깨져보이게 된다\n<ul>\n<li>픽셀 밀도가 높을수록 더 세밀하게 표현할 수 있기 때문에</li>\n</ul>\n</li>\n<li>이미지를 @x1,2,3으로 뽑아내는 이유가 여기 있다\n<ul>\n<li>이미지를 각각 해상도에 맞춰서 배수로 뽑아낸다</li>\n<li>디바이스 밀도에 따라 이미지 사이즈가 100<em>100, 200</em>200, 300*300 각각 적용</li>\n<li>실제 화면에 보여지는 크기는 똑같지만 디바이스의 물리적인 픽셀이 다르게 적용되는 것이다</li>\n</ul>\n</li>\n<li>SVG는 벡터로 그려지기 때문에 밀도에 영향을 받지 않는다\n<ul>\n<li>벡터를 렌더링하기 위해 픽셀로 변환하는 작업을 래스터화</li>\n</ul>\n</li>\n<li>RN에서는 px을 입력 받아 안드로이드 > dp, iOS > pt 각각 변환하게 된다\n<ul>\n<li>0.5px을 입력했을때, 각각 디바이스 해상도에 따라 변환된 값으로 그려내게 된다</li>\n<li>하지만 해상도가 낮은 디바이스에서 입력된 0.5px을 실제로 디바이스가 표현해낼 수 있는 dp 보다 낮은 값이 되어버린다면 최소값으로 들어가게 되겠지?!</li>\n<li>그럼 아무리 0.5를 입력해도 0.5를 그리지 못하는 것...\n<ul>\n<li>20*20 픽셀로 그리라고 했는데 뚱땅뚱땅 계단으로 그려지는 것... (<a href=\"https://developer.android.com/guide/practices/screens_support#density\">이렇게 계단으로 나온다고...</a>)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"https://velog.io/@vnfdusdl/DPRDevice-pixel-ratio%EC%9D%98-%EC%9D%B4%ED%95%B4\">device pixel ratio</a>\n<ul>\n<li>0.5px을 그리라고 입력했다</li>\n<li>디바이스는 1배수, 3배수 두가지로 테스트하였다</li>\n<li>1배수 디바이스에서는 0.5px을 그리기 위해 물리적으로 픽셀을 0.5만큼 그렸다</li>\n<li>3배수 디바이스에서는 0.5px을 그리기 위해 물리적으로 0.5 * 3 = 1.5만큼 그렸다</li>\n<li>원이 수많은 점을 이어서 표현하는 것처럼 3개의 픽셀이 1개의 픽셀로 표현한 것보다 부드럽다</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"react-docs-hooks\" style=\"position:relative;\"><a href=\"#react-docs-hooks\" aria-label=\"react docs hooks permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>React Docs: Hooks</code></h4>\n<ul>\n<li>아래 useRef 보다가 참고 리액트 문서를 따라 들어갔고 그러다 훅을 한번 더 보고 있었는데</li>\n<li>요즘 부딪히고 있는 문제들을 해결할 수 있는 무언가 찾을 수 있을까하며</li>\n<li>궁금해서 해보고 싶은 것들을 찾아보았다</li>\n<li><a href=\"https://ko.reactjs.org/docs/hooks-faq.html#how-can-i-measure-a-dom-node\">onLayout을 ref로 대체할 수 있을까?</a>\n<ul>\n<li><a href=\"https://github.com/facebook/react-native/blob/bdd25ed6a3ae56e0bc9239d7fc7b31baf6bcb7ce/ReactCommon/react/renderer/mounting/ShadowTree.cpp#L453\">onLayout 타고 들어가니 ShadowTree.getLayoutMetrics</a></li>\n<li>🤔 안되는데?</li>\n</ul>\n</li>\n<li><a href=\"https://ko.reactjs.org/docs/hooks-faq.html#how-to-create-expensive-objects-lazily\">initialState에 고비용 계산식이 들어간다면?</a>\n<ul>\n<li>렌더타임마다 매번 계산하고 있다</li>\n<li>state 업데이트는 되는게 아니라 리렌더를 유발하지는 않겠지만</li>\n<li>불필요하다</li>\n</ul>\n</li>\n<li><a href=\"https://ko.reactjs.org/docs/hooks-faq.html#how-to-read-an-often-changing-value-from-usecallback\">메모이제이션 햇으나 결국 매번 리렌더 타는 경우 해결법</a>\n<ul>\n<li>useCallback을 했으나 디펜던시 때문에 매번 리렌더 되는 상황</li>\n<li>무적의 ref</li>\n<li>그러다 갑자기 떠오른 useImperativeHandle에 디펜던시 설정을 안해줬으니 리렌더가 계속 되고 있었지..</li>\n</ul>\n</li>\n<li>[useEffect vs useLayoutEffect]\n<ul>\n<li>시점 문제로 useLayoutEffect를 사용하는 경우가 있다</li>\n<li>렌더링 되기 전에 미리 계산 되어야하는 것을 처리하도록 했는데</li>\n<li><code>동기적으로</code> !?? 😱</li>\n<li>먹통이 되어보이는 문제는 여기일까?</li>\n<li>아 아닌데</li>\n<li>useLayoutEffet에서 화면 자체를 막고 고비용 계산을 동기적으로 처리</li>\n<li>그리고나서 렌더링 되고 useffect가 실행되는데</li>\n<li>useEffect 조차도 무거운 계산이라면???</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"useref\" style=\"position:relative;\"><a href=\"#useref\" aria-label=\"useref permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>useRef</code></h4>\n<ul>\n<li><code>useRef</code> 사용하다보면 타입이 맞지 않는 경우가 있다</li>\n<li><a href=\"https://driip.me/7126d5d5-1937-44a8-98ed-f9065a7c35b5\">관련해서 제대로 이해할 수 있도록 도와준 블로그</a></li>\n<li>초기화를 해준 경우 <code>MutableRefObject</code> 타입을 갖고 초기화를 하지 않고 사용한 경우에는 <code>RefObject</code> 타입을 갖는다</li>\n<li>이 차이는 <code>ref를 사용하려는 목적</code> 을 생각해보니 이해할 수 있었다</li>\n<li>일반적으로 DOM을 제어하기 위해 ref를 사용한다 (<code>const ref = useRef(null);</code>)</li>\n<li>이후에 값을 의도적으로 변경하려는 목적이 아니라 판단할 수 있으므로 이 경우 타입은 <code>RefObject</code> 이다\n<ul>\n<li>ref.current 자체는 변경할 수 없다</li>\n<li>ref.current.* 하위 객체는 변경할 수 있다</li>\n<li>const와 let처럼</li>\n</ul>\n</li>\n<li>반대로 DOM 제어가 아닌 리렌더를 유발하지 않는 변수로써 ref를 사용한다면 (<code>const ref = useRef&#x3C;number>(0);</code>)</li>\n<li>ref가 담고 있는 타입과 초기값을 설정하게 되고 <code>MutableRefObject</code> 타입을 갖는다\n<ul>\n<li>ref.current 자체를 변경할 수 있다</li>\n</ul>\n</li>\n<li>그렇다면 내가 겪은 타입 에러의 원인은 어떤 부분을 잘못 사용했던 것일까</li>\n<li>DOM ref로 사용하려고 하였다 (<code>const ref = useRef();</code>)\n<ul>\n<li>이렇게 사용하는 것을 조심하는게 어떨까</li>\n</ul>\n</li>\n<li>하지만 DOM의 타입은 <code>RefObject</code> 인데 내가 전달하고 있는 ref의 타입은 <code>MutableRefObject</code> 였다</li>\n</ul>\n<h2 id=\"36--312\" style=\"position:relative;\"><a href=\"#36--312\" aria-label=\"36  312 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>3/6 ~ 3/12</code></h2>\n<h4 id=\"bff\" style=\"position:relative;\"><a href=\"#bff\" aria-label=\"bff permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>BFF</code></h4>\n<ul>\n<li>지난 1월에 BFF 라는 모델을 처음 봤었는데 (<a href=\"/blog/monthly-log/2022-01\">1월 한달동안 - Backends For Frontend</a>)</li>\n<li>당시 <code>MSA API > BFF > APP</code> 백엔드에서 구성해주면 좋겠다고 생각했다</li>\n<li>쉽게 가려고 했다 🙈</li>\n<li>그러나 이번에 <a href=\"https://fe-developers.kakaoent.com/2022/220310-kakaopage-bff/\">카카오페이지는 BFF(Backend For Frontend)를 어떻게 적용했을까?</a> 를 보고 나니</li>\n<li>클라이언트에서 필요한 모양으로 직접 프론트엔드 개발자가 구현하는 것이 이상적인 형태가 될 수 있겠다</li>\n<li>그런 꿈과 같은 희망과 짧은 시간이 흐르고 nextjs + graphql 조합을 보았다</li>\n<li>아 이게 BFF 였는데, 멀리서 찾아보려고 하고 있었네</li>\n</ul>\n<h4 id=\"svg\" style=\"position:relative;\"><a href=\"#svg\" aria-label=\"svg permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>SVG</code></h4>\n<ul>\n<li>그냥 피그마에서 꺼내다 쓰려고 했는데</li>\n<li>사알짝 필요한 포인트가 다른다</li>\n<li>요청하면 되겠지만 어느정도 커스텀 할 줄 알면 좋을듯하여</li>\n<li><a href=\"https://evan-moon.github.io/2020/12/12/draw-arc-with-svg-clippath/\">그래서 전에 읽었던 글이 떠올라 다시 찾아갔다</a></li>\n<li><code>width, height</code>는 정말 딱 SVG 도형이 그려지는 캔버스 사이즈이고 <code>viewBox</code>는 <code>캔버스 내부 좌표계</code>이다</li>\n<li>만약 <code>width=\"300\" height=\"300\" viewBox=\"0 0 100 100\"</code> 라면</li>\n<li>실제 우리 눈에 보이는 이 SVG 박스의 크기는 300<em>300 이지만 내부적으로는 100</em>100 좌표계로 동작한다 (<a href=\"https://evan-moon.github.io/2020/12/12/draw-arc-with-svg-clippath/#%EB%8F%84%EB%84%9B-%EC%B0%A8%ED%8A%B8-%EA%B7%B8%EB%A6%AC%EA%B8%B0\">참고: 포스팅</a>)</li>\n<li>캔버스 안에 그려진 도형 (Path, Circle) 등은 viewBox 좌표를 기준으로 잡혀있는 것이다</li>\n<li>따라서 SVG width, height를 변경하면 도형의 모양 자체는 유지되지만 좌표 기준이 달라지게 되면서 viewport 바깥으로 사라져버릴 수 있다</li>\n<li>그럼 사이즈를 줄임과 동시에 viewBox 내부 좌표계를 이동시키면 어떨까?</li>\n<li>사이즈와 좌표 비율을 잘 계산한다면 벡터를 위로 올리고 사이즈를 최소화하는 것도 가능할 것 같은데...</li>\n<li>Path 값을 전부 바꿔야한다고 🙈</li>\n<li>생각하다보니 정확한 값을 위하여 다시 요청하는게 좋겠다</li>\n</ul>\n<h2 id=\"31--35\" style=\"position:relative;\"><a href=\"#31--35\" aria-label=\"31  35 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>3/1 ~ 3/5</code></h2>\n<h4 id=\"깃헙-액션\" style=\"position:relative;\"><a href=\"#%EA%B9%83%ED%97%99-%EC%95%A1%EC%85%98\" aria-label=\"깃헙 액션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>깃헙 액션</code></h4>\n<ul>\n<li>파베 베포 라인을 만들기 위한 노력을 했는데</li>\n<li>😭 그냥 circle이 보고 싶어지는 순간</li>\n<li><a href=\"https://dev-yakuza.posstree.com/ko/react-native/github-actions-fastlane/\">참고: GitHub Actions와 Fastlane을 사용해서 React Native 앱 배포하기</a></li>\n<li>\n<ol>\n<li><a href=\"https://github.com/ruby/setup-ruby#single-job\">deprecate된 setup-ruby를 변경하고 자동으로 번들 설치하도록</a></li>\n</ol>\n</li>\n<li>\n<ol start=\"2\">\n<li>단순 env 오타로 인한 액션 실패</li>\n</ol>\n</li>\n<li>\n<ol start=\"3\">\n<li>그렇게 설치된 번들에서 오류가 발생</li>\n</ol>\n<ul>\n<li><code>Your bundle only supports platforms [\"x86_64-darwin-20\"] but your local platform is x86_64-linux. Add the current platform to the lockfile with 'bundle lock --add-platform x86_64-linux' and try again.</code></li>\n<li>단순하게 로컬에서 확인한 <code>ruby -v > 2.6.3</code> 버전이면 되지 않을까 생각했는데 <code>Gemfile.lockfile</code> 다시 보니 오직 <code>x86_64-darwin20</code> 🙈</li>\n<li>에러 메세지 그대로 lockfile 수정 (<a href=\"https://github.com/ruby/setup-ruby/issues/177\">동일한 이슈, lockfile이 해결</a>)</li>\n<li>(+iOS 빌드에서도 동일한 이슈가 발생하였다... 이렇게 매번 추가해주어야한다고? 통용하는 값이 있지 않을까)</li>\n</ul>\n</li>\n<li>\n<ol start=\"4\">\n<li>드디어 빌드로 넘어왔나 싶었더니 다시 발생한 에러 두가지 (fastlane plugin + google-service.json)</li>\n</ol>\n<ul>\n<li><code>Error loading plugin 'fastlane-plugin-firebase_app_distribution': You don't have write permissions for the /var/lib/gems/2.7.0 directory.</code>\n<ul>\n<li><code>bundle exec</code> 로 실행하도록 하였는데, 그럼에도 계속 발생하는중</li>\n<li>왜지... <code>setup-ruby</code>에서 <code>bundler-cache</code>를 꺼버리니 된다</li>\n<li>번들이 무언가 캐싱이 잘못되었나?</li>\n</ul>\n</li>\n<li><a href=\"https://keelim.tistory.com/entry/Github-Actions%EC%9C%BC%EB%A1%9C-%EA%B5%AC%EA%B8%80-%ED%94%8C%EB%A0%88%EC%9D%B4%EC%8A%A4%ED%86%A0%EC%96%B4-%EB%B0%B0%ED%8F%AC-with-google-servicesjson\">google-service.json 을 올릴 수 없지 않나 > 시크릿으로 만들어버린다</a></li>\n</ul>\n</li>\n<li>\n<ol start=\"5\">\n<li>iOS 빌드만 올라가면 되는데 <code>provisioning profile</code> 이 없다</li>\n</ol>\n<ul>\n<li><a href=\"https://docs.github.com/en/actions/deployment/deploying-xcode-applications/installing-an-apple-certificate-on-macos-runners-for-xcode-development\">빌드에 사용한 mobileprovision에서 base64로 뽑아다가 provisioning profile도 직접 만들어서 사용한다</a></li>\n</ul>\n</li>\n<li>그러나... 되지 않는다....</li>\n<li>기존에 xcode에 던지던 mobileprovision으로는 빌드가 되지 않았다 왜지 ⁉️</li>\n<li><code>~/Library/MobileDevice/Provisioning Profiles</code>에서 직접 빌드에 사용한 mobileprovision에서 뽑아가니 정상적으로 빌드 성공</li>\n</ul>\n<h4 id=\"viewport\" style=\"position:relative;\"><a href=\"#viewport\" aria-label=\"viewport permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>viewport</code></h4>\n<ul>\n<li><code>100vh</code>로 잡아두었더니 모바일 주소창이 있어서 레이아웃이 맞지 않는다</li>\n<li>이거 무언가 설정 바꿔줘야겠다고 생각하고 시간이 흘러가는중</li>\n<li><a href=\"https://twitter.com/jensimmons/status/1499441043930062854?t=HhRVTIWT_nz697VWj2dSqg&#x26;s=19\">우연하게 보게된 뷰포트 관련 스레드</a></li>\n<li><a href=\"https://www.terluinwebdesign.nl/en/css/incoming-20-new-css-viewport-units-svh-lvh-dvh-svw-lvw-dvw/\">뷰포트 단위가 여러개 있는데 svh, dvh가 쓰고 싶다</a></li>\n<li><a href=\"https://caniuse.com/viewport-unit-variants\">언제쯤..!</a></li>\n</ul>","frontmatter":{"slug":"/blog/monthly-log/2022-03","date":"2022년 4월 7일","title":"3월 한달동안 로그"}}},"pageContext":{"id":"0e6bd351-bd1c-55f4-b978-6464d6538b98","frontmatter__slug":"/blog/monthly-log/2022-03","__params":{"frontmatter__slug":"blog"}}},"staticQueryHashes":["3000541721","3293771174"]}