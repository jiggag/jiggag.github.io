{"componentChunkName":"component---src-pages-markdown-remark-frontmatter-slug-tsx","path":"/blog/monthly-log/2022-08/","result":{"data":{"markdownRemark":{"html":"<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EC%9D%BD%EC%96%B4%EB%B3%B4%EC%95%98%EB%8D%98\"><code>읽어보았던</code></a></li>\n<li><a href=\"#829--831\"><code>8/29 ~ 8/31</code></a></li>\n<li><a href=\"#822--828\"><code>8/22 ~ 8/28</code></a>\n<ul>\n<li>\n<ul>\n<li><a href=\"#%EC%95%88%EB%93%9C%EB%A1%9C%EC%9D%B4%EB%93%9C-%EC%BB%B7%EC%95%84%EC%9B%83\"><code>안드로이드 컷아웃</code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#815--821\"><code>8/15 ~ 8/21</code></a>\n<ul>\n<li>\n<ul>\n<li><a href=\"#rn-0694\"><code>RN 0.69.4</code></a></li>\n<li><a href=\"#%EC%9E%98%EB%AA%BB%EB%90%9C-%EC%B6%94%EC%83%81%ED%99%94\"><code>잘못된 추상화</code></a></li>\n<li><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BB%A4%EB%B2%84%EB%A6%AC%EC%A7%80\"><code>테스트 커버리지</code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#88--814\"><code>8/8 ~ 8/14</code></a>\n<ul>\n<li>\n<ul>\n<li><a href=\"#%EB%A6%AC%EC%95%A1%ED%8A%B8-%EC%9D%98%EC%A1%B4%EC%84%B1\"><code>리액트 의존성</code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#81--87\"><code>8/1 ~ 8/7</code></a>\n<ul>\n<li>\n<ul>\n<li><a href=\"#solid-%EC%9B%90%EC%B9%99\"><code>SOLID 원칙</code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</div>\n<h2 id=\"읽어보았던\" style=\"position:relative;\"><a href=\"#%EC%9D%BD%EC%96%B4%EB%B3%B4%EC%95%98%EB%8D%98\" aria-label=\"읽어보았던 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>읽어보았던</code></h2>\n<ul>\n<li>이번 한달은 읽어본 것이 있다고/없다고 할 수 없었다</li>\n<li>왜 그럴까</li>\n<li>무언가 헤딩이 부족했던 것 같다</li>\n</ul>\n<hr>\n<h2 id=\"829--831\" style=\"position:relative;\"><a href=\"#829--831\" aria-label=\"829  831 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>8/29 ~ 8/31</code></h2>\n<h2 id=\"822--828\" style=\"position:relative;\"><a href=\"#822--828\" aria-label=\"822  828 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>8/22 ~ 8/28</code></h2>\n<h4 id=\"안드로이드-컷아웃\" style=\"position:relative;\"><a href=\"#%EC%95%88%EB%93%9C%EB%A1%9C%EC%9D%B4%EB%93%9C-%EC%BB%B7%EC%95%84%EC%9B%83\" aria-label=\"안드로이드 컷아웃 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>안드로이드 컷아웃</code></h4>\n<ul>\n<li><a href=\"https://developer.android.com/guide/topics/display-cutout?hl=ko\">문서: 안드로이드 디스플레이 컷아웃</a>\n<ul>\n<li><code>기기에 컷아웃이 3개 이상 있을 수 없습니다.</code></li>\n<li><code>기기 양쪽의 긴 가장자리에는 컷아웃이 있을 수 없습니다.</code></li>\n</ul>\n</li>\n<li>???????</li>\n<li>위/아래에만 컷아웃이 들어갈 수 있다는 것</li>\n<li>그럼 간단해질 것 같은데</li>\n</ul>\n<h2 id=\"815--821\" style=\"position:relative;\"><a href=\"#815--821\" aria-label=\"815  821 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>8/15 ~ 8/21</code></h2>\n<h4 id=\"rn-0694\" style=\"position:relative;\"><a href=\"#rn-0694\" aria-label=\"rn 0694 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>RN 0.69.4</code></h4>\n<ul>\n<li>미루던 + 잊고 있던 RN 올리기\n<ul>\n<li>근데 벌써 0.70.0-rc가 나와있는데?</li>\n<li>절대... 릴리즈 되지 않은 버전을 올리지 않으리라 다짐하며</li>\n<li>0.69.4로 정한다</li>\n</ul>\n</li>\n<li>근데 우연히?\n<ul>\n<li>그동안 코틀린으로 마이그레이션 한 이후?</li>\n<li>안드 디버그 빌드를 하면 flipper가 연결이 제대로 안되고 앱이 죽어버리는 오류가 있었는데</li>\n<li><code>ReactNativeFlipper</code> 도 java > kotlin 으로 되었으니 이를 호출하는 부분도 변경했어야하는데...</li>\n<li>계속 자바 클래스 호출하는 방식으로 사용하고 있었다 (그러니 오류가 뻥)</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"잘못된-추상화\" style=\"position:relative;\"><a href=\"#%EC%9E%98%EB%AA%BB%EB%90%9C-%EC%B6%94%EC%83%81%ED%99%94\" aria-label=\"잘못된 추상화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>잘못된 추상화</code></h4>\n<ul>\n<li><a href=\"https://edykim.com/ko/post/when-to-break-up-a-component-into-multiple-components/\">컴포넌트를 여러 컴포넌트로 나눠야 할 때</a></li>\n<li>하나의 리액트 컴포넌트로 작성해도 된다\n<ul>\n<li>그러나 가장 큰 단점</li>\n<li>상태 변화가 일어날 때마다 애플리케이션 전체를 새로 그리게 된다</li>\n<li>재사용이 어렵다</li>\n<li>관심사 분리가 되지 않았기 때문에 복잡하다</li>\n</ul>\n</li>\n<li>이러한 문제점을 미리 예방하려고 컴포넌트를 잘게 쪼개는 <code>추상화</code>를 한다\n<ul>\n<li>하지만 이런 잘못된 추상화로 오히려 불필요한 비용을 발생시킬 수 있다</li>\n<li>어떤 일이 있을까 생각을 해보면...</li>\n<li>쪼개둔 컴포넌트를 다시 합쳐야하는 일이 발생하는 것이 가장 손쉽게 경험하는 비용이지 않을까</li>\n<li>또는 쪼개는 위치가 여기가 아니였을때</li>\n</ul>\n</li>\n<li>\n<blockquote>\n<p>컴포넌트를 더 작은 크기로 쪼개는 것은 자유입니다. 하지만 진짜 문제를 경험하기 전까지는 크기가 커지는 컴포넌트에 대해 두려워하지 마세요. 너무 이르게 추상적으로 나누는 것보다 정말로 필요할 때까지 기다렸다가 적용하는 것이 코드 관리에 훨씬 편리합니다.</p>\n</blockquote>\n</li>\n<li>분명 봤을것인데... 다시 봐도 새로운건 얼마나 매일 즐거울까</li>\n</ul>\n<h4 id=\"테스트-커버리지\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BB%A4%EB%B2%84%EB%A6%AC%EC%A7%80\" aria-label=\"테스트 커버리지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>테스트 커버리지</code></h4>\n<ul>\n<li>(홍보글로 시작한 것 같지만...) <a href=\"https://about.codecov.io/blog/the-case-against-100-code-coverage/\">100% 코드 커버리지?!</a></li>\n<li>전에 커버리지를 100% 가까이 하려고 시도해본적이 있었다</li>\n<li>커버리지는 결국 그 코드 시나리오를 확인했는지 정도로 올릴 수 있었는데</li>\n<li>순간 중심을 잃어버리면 <code>100%를 채운다</code>가 테스트 목적이 되어버리게 되고</li>\n<li>코드 케이스를 검증하기 위한 테스트 시나리오가 아니라 단순히 코드를 테스트 시나리오에 끼워넣기 위한? 시나리오를 작성하고 있게 된다</li>\n<li>이것이 위 글에서 위험하게 생각하는 100%의 함정 아닐까</li>\n</ul>\n<h2 id=\"88--814\" style=\"position:relative;\"><a href=\"#88--814\" aria-label=\"88  814 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>8/8 ~ 8/14</code></h2>\n<h4 id=\"리액트-의존성\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%EC%95%A1%ED%8A%B8-%EC%9D%98%EC%A1%B4%EC%84%B1\" aria-label=\"리액트 의존성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>리액트 의존성</code></h4>\n<ul>\n<li><a href=\"https://medium.com/@yujso66/%EB%B2%88%EC%97%AD-%EB%A6%AC%EC%95%A1%ED%8A%B8-%EC%BD%94%EB%93%9C%EC%97%90%EC%84%9C-%EB%B2%84%EA%B7%B8%EB%A5%BC-%EC%A4%84%EC%9D%B4%EB%8A%94-%EB%B0%A9%EB%B2%95-10870c43fc22\">리액트의 패턴과 안티패턴 이해하기</a>\n<ul>\n<li>의존성을 잘 관리해서 메모이제이션 하고 리렌더를 유발하는 것들을 하지 말자</li>\n<li>이런걸까 🤔</li>\n</ul>\n</li>\n<li><a href=\"https://velog.io/@superlipbalm/the-closure-trap-of-react-hooks\">리액트 클로저 트랩</a>에서도 중요하게 여겨지는 의존성 신경쓰기</li>\n</ul>\n<h2 id=\"81--87\" style=\"position:relative;\"><a href=\"#81--87\" aria-label=\"81  87 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>8/1 ~ 8/7</code></h2>\n<h4 id=\"solid-원칙\" style=\"position:relative;\"><a href=\"#solid-%EC%9B%90%EC%B9%99\" aria-label=\"solid 원칙 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>SOLID 원칙</code></h4>\n<ul>\n<li><a href=\"https://velog.io/@dev_boku/%EB%B2%88%EC%97%AD-React%EC%97%90-SOLID-%EC%9B%90%EC%B9%99-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0\">React에 SOLID 원칙 적용하기</a>\n<ul>\n<li>OOP에서만 적용될 수 있는게 아니다 😯</li>\n<li>클래스 > 컴포넌트, 훅이라고 생각하면 충분히 적용할 수 있는 것</li>\n</ul>\n</li>\n<li>단일 책임 원칙 (SRP)\n<ul>\n<li>하나의 컴포넌트는 하나의 목적을 갖는다</li>\n<li>데이터를 가져오고(1) 필터링 하고(2) 화면에 그리는 것(3) > 3가지 목적을 하나의 컴포너트에서 하도록 두지 않고</li>\n<li>1, 2를 훅으로 분리하고 3을 단순한 컴포넌트로 구성한다면!</li>\n<li>하지만 훅, 컴포넌트로 분리하는 과정에서 잘못 추상화를 진행한다면 역전된 의존성을 갖게 될 수 있고 오히려 복잡해지는...</li>\n</ul>\n</li>\n<li>개방-폐쇄 원칙 (OCP)\n<ul>\n<li>컴포넌트 내부에서 의존성을 갖고 처리하는 것이 아니라</li>\n<li>확장에 유연하도록 props, children으로 넘겨 받도록</li>\n</ul>\n</li>\n<li>리스코프 치환 원칙 (LSP)\n<ul>\n<li>리액트에서 <a href=\"https://reactjs.org/docs/composition-vs-inheritance.html\">상속 &#x3C;&#x3C;&#x3C;&#x3C;&#x3C;&#x3C; 합성</a></li>\n</ul>\n</li>\n<li>인터페이스 분리 원칙 (ISP)\n<ul>\n<li>컴포넌트 간 의존성을 낮춰서 재사용성을 높일 수 있도록 하는 것</li>\n<li><code>A > B > C</code> 로 넘어올수록 <code>TargetAProps | TargetBProps > TargetProps > string</code> 이런 느낌</li>\n<li>최종 컴포넌트에선 다른 인터페이스와의 의존성을 줄일 수 있도록 하는 것</li>\n</ul>\n</li>\n<li>의존관계 역전 원칙 (DIP)\n<ul>\n<li>ISP와 이어지는 것 같은데</li>\n<li>HOC로 서로 다른 컴포넌트가 서로를 의존하지 않고 공통된 부분만 의존하도록 추상화</li>\n</ul>\n</li>\n</ul>","frontmatter":{"slug":"/blog/monthly-log/2022-08","date":"2022년 9월 2일","title":"8월 한달동안 로그"}}},"pageContext":{"id":"5d991b90-b8d7-540f-b355-de328a73c02a","frontmatter__slug":"/blog/monthly-log/2022-08","__params":{"frontmatter__slug":"blog"}}},"staticQueryHashes":["3000541721","3293771174"]}