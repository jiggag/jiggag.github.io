{"componentChunkName":"component---src-pages-markdown-remark-frontmatter-slug-tsx","path":"/blog/monthly-log/2024-04/","result":{"data":{"markdownRemark":{"html":"<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#bfcache\">bfcache</a></li>\n<li><a href=\"#%ED%94%8C%EB%A6%AC%ED%8D%BC%EB%A5%BC-%EC%9E%8A%EC%9C%BC%EB%9D%BC%ED%95%9C%EB%8B%A4\">플리퍼를 잊으라한다</a></li>\n<li><a href=\"#%EC%8B%9C%EA%B0%81%EC%A0%81-%ED%9A%8C%EA%B7%80-%ED%85%8C%EC%8A%A4%ED%8A%B8\">시각적 회귀 테스트</a></li>\n<li><a href=\"#%EB%A6%B0%ED%8A%B8%EB%8A%94-%EC%9D%B4%EB%A1%AD%EB%8B%A4\">린트는 이롭다</a></li>\n</ul>\n</div>\n<h3 id=\"bfcache\" style=\"position:relative;\"><a href=\"#bfcache\" aria-label=\"bfcache permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://velog.io/@superlipbalm/bfcache\">bfcache</a></h3>\n<ul>\n<li>일반적으로 웹페이지를 캐싱한다\n<ul>\n<li><code>bfcache는 방문자가 다른 곳으로 동하는 순간, 페이지의 전체 스냅숏(자바스크립트 힙 포함)을 저장해주는 메모리 내부의 캐시다. 사용자가 다시 돌아오려 할 때, 브라우저는 메모리에 저장해둔 전체 페이지를 사용해서 페이지를 빠르고 쉽게 복원해준다.</code></li>\n</ul>\n</li>\n<li>RN 렌더 자체도 캐싱할 수 있을까?</li>\n<li>참고: <a href=\"https://ui.toast.com/posts/ko_20201201\">이전/다음 페이지 캐시</a></li>\n</ul>\n<h3 id=\"플리퍼를-잊으라한다\" style=\"position:relative;\"><a href=\"#%ED%94%8C%EB%A6%AC%ED%8D%BC%EB%A5%BC-%EC%9E%8A%EC%9C%BC%EB%9D%BC%ED%95%9C%EB%8B%A4\" aria-label=\"플리퍼를 잊으라한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://reactnative.dev/blog/2024/04/22/release-0.74#removal-of-flipper-react-native-plugin\">플리퍼를 잊으라한다</a></h3>\n<ul>\n<li>리액네 74가 나오면서</li>\n<li><a href=\"https://reactnative.dev/docs/debugging#react-devtools\">대체할 수 있는 것을 이미 알고 있다</a>\n<ul>\n<li>devtools 는 충분히 커버하고 있다</li>\n</ul>\n</li>\n<li>그럼에도 아쉬운건 정들었기 때문일까</li>\n<li><a href=\"https://shift.infinite.red/why-you-dont-need-flipper-in-your-react-native-app-and-how-to-get-by-without-it-3af461955109\">벌써 준비된 작별인사</a></li>\n<li>리액네를 사용하면서 안드, iOS 각각을 개발하는 것보다 나은 생산성을 얻을 수 있다고 생각한다</li>\n<li>하지만 더 좋은 성능으로 끌어올리거나 더 깊은 내용을 다루기 위해서는 다시 네이티브 각각으로 들어와야한다</li>\n<li>그 사이에서 플리퍼 또한 디버깅 세상에 중간자 같은 역할을 잘 해주었다고 생각한다</li>\n<li>어느정도 리액트 디버거가 보완해주고 익숙해진다면 xcode의 현란한 뷰 계층 정도는 보기 쉬워질지도…</li>\n</ul>\n<h3 id=\"시각적-회귀-테스트\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EA%B0%81%EC%A0%81-%ED%9A%8C%EA%B7%80-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\"시각적 회귀 테스트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://techblog.woowahan.com/17081/\">시각적 회귀 테스트</a></h3>\n<ul>\n<li>UI 컴포넌트 변경 후 스냅샷을 린트 CI로 확인하는 것이 아니라\n<ul>\n<li>스크린샷을 업로드하여 직접 시각적으로 변경사항을 확인하고 반영하도록 하였다</li>\n</ul>\n</li>\n<li>보통 스냅샷 코드만 보면 변경사항이 의도한 것이라 해도 사이즈가 커질수록 읽기 난해해지는데\n<ul>\n<li>그래서 무의미하다고 판단되어 스냅샷 테스트 자체를 사용 하지 않게 된다</li>\n</ul>\n</li>\n<li>이를 스크린샷으로 직접 시각적인 비교를 통한다는 점에서 새롭다\n<ul>\n<li>혹은 내가 잘못된 스냅샷 비교를 사용하고 있었을지도</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"린트는-이롭다\" style=\"position:relative;\"><a href=\"#%EB%A6%B0%ED%8A%B8%EB%8A%94-%EC%9D%B4%EB%A1%AD%EB%8B%A4\" aria-label=\"린트는 이롭다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://techblog.woowahan.com/15903\">린트는 이롭다</a></h3>\n<ul>\n<li>새로운 룰들을 참고해봐야겠다\n<ul>\n<li><a href=\"https://techblog.woowahan.com/15903/#toc-6\">특히나 추천하는 플러그인들</a></li>\n<li><code>@tanstack/eslint-plugin-query</code></li>\n<li><code>@typescript-eslint/naming-convention</code></li>\n</ul>\n</li>\n<li>eslintrc에 settings.react.version 을 명시한 것도 새로운 부분\n<ul>\n<li><code>React 버전을 명시하지 않으면 React 버전을 감지하기 위해 React 라이브러리 전체를 불러오므로 린트 실행 속도가 느려질 수 있습니다.</code></li>\n<li>이게 없어서 느렸던걸까</li>\n</ul>\n</li>\n</ul>","frontmatter":{"slug":"/blog/monthly-log/2024-04","date":"2024년 5월 23일","title":"4월 한달동안 로그","subtitle":"찾아보고, 읽어보고, 적어두기","tags":["log"]}}},"pageContext":{"id":"7ba446eb-a072-54bd-9b29-b23c2dc3552f","frontmatter__slug":"/blog/monthly-log/2024-04","__params":{"frontmatter__slug":"blog"}}},"staticQueryHashes":["3000541721","3293771174"],"slicesMap":{}}