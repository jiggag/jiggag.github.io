{"componentChunkName":"component---src-pages-markdown-remark-frontmatter-slug-tsx","path":"/blog/monthly-log/2024-09/","result":{"data":{"markdownRemark":{"html":"<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EB%B2%88%EC%97%AD-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EA%B2%BD%EA%B3%84%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%BC%EA%B9%8C%EC%9A%94\"><strong>(번역) 테스트 경계란 무엇일까요?</strong></a></li>\n<li><a href=\"#%EB%B2%88%EC%97%AD-%EC%A2%8B%EC%9D%80-%EC%BD%94%EB%93%9C-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%9A%A9%EC%9D%B4%ED%95%9C-%EC%BD%94%EB%93%9C\"><strong>(번역) 좋은 코드, 테스트 용이한 코드</strong></a></li>\n<li><a href=\"#%EB%B2%88%EC%97%AD-tdd%EC%97%90-%EB%8C%80%ED%95%9C-%ED%81%B0-%EC%98%A4%ED%95%B4\"><strong>[번역] TDD에 대한 큰 오해</strong></a></li>\n<li><a href=\"#%EB%B2%88%EC%97%AD-typescript-branded-types%EB%A1%9C-%EB%9F%B0%ED%83%80%EC%9E%84-%ED%83%80%EC%9E%85-%EC%95%88%EC%A0%95%EC%84%B1-%EA%B0%9C%EC%84%A0%ED%95%98%EA%B8%B0\"><strong>(번역) TypeScript Branded Types로 런타임 타입 안정성 개선하기</strong></a></li>\n<li><a href=\"#%EC%9E%AC%EB%AF%B8%EC%99%80-%EC%9D%B4%EC%9D%B5%EC%9D%84-%EC%9C%84%ED%95%9C-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%B5%9C%EC%A0%81%ED%99%94\"><strong>재미와 이익을 위한 자바스크립트 최적화</strong></a></li>\n</ul>\n</div>\n<h3 id=\"번역-테스트-경계란-무엇일까요\" style=\"position:relative;\"><a href=\"#%EB%B2%88%EC%97%AD-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EA%B2%BD%EA%B3%84%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%BC%EA%B9%8C%EC%9A%94\" aria-label=\"번역 테스트 경계란 무엇일까요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://velog.io/@superlipbalm/what-is-a-test-boundary\"><strong>(번역) 테스트 경계란 무엇일까요?</strong></a></h3>\n<ul>\n<li>테스트를 작성하다보면 생기는 고민 포인트\n<ul>\n<li><code>무엇을 모킹해야 할지, 얼마나 많이 모킹을 해야할지</code></li>\n</ul>\n</li>\n<li><code>테스트를 통해 얻을 수 있는 가장 큰 가치는 [언제 테스트가 실패해야 하는지](https://www.epicweb.dev/the-golden-rule-of-assertions) 아는 것입니다.</code>\n<ul>\n<li>테스트 하려는 것이 외부의 무언가에 영향을 받아 실패하면 안된다</li>\n<li>예를 들면 서버 요청/응답을</li>\n<li>테스트 작성했을때 무슨 이유로 네트워크 오류가 발생한다면 테스트가 실패하게 된다</li>\n<li>이는 의도와 다르게 실패하게 되는 것으로 테스트 경계를 다시 설정하여 테스트 하려는 범위를 수정해야한다\n<ul>\n<li><code>네트워크가 테스트 결과에 영향을 미치지 않도록 하는 것입니다. 서버의 작동 가능성 및 정확성은 테스트된 함수의 관심사가 아닙니다. 함수는 서버에 영향을 미치지 않으며 그 동작을 보장할 수 없습니다. 따라서 테스트 코드의 관심 밖에 있는 사항으로 인해 테스트가 실패해서는 안 됩니다.</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>테스트 하려는 것이 아니라면 모킹 하면 되는데, 다시 첫번째 고민 포인트로 돌아온다\n<ul>\n<li>어느 정도로 모킹을 해야할까?</li>\n<li><code>테스트 경계는 테스트에서 중요하지 않은 것을 결정하는 데 도움이 되므로, 테스트 경계를 과도하게 설정하면 실제로는 아무것도 테스트하지 않아 아무것도 중요하지 않은 테스트가 됩니다. 이를 종종 *오버모킹*이라고 하는데, 이는 절대 도달하고 싶지 않은 상태입니다.</code></li>\n</ul>\n</li>\n<li>이 테스트가 언제 실패야하는건지 생각해보고\n<ul>\n<li>성공과 실패하는 상황에 필요한 변동 조건이 아니라면 모킹 처리해본다</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"번역-좋은-코드-테스트-용이한-코드\" style=\"position:relative;\"><a href=\"#%EB%B2%88%EC%97%AD-%EC%A2%8B%EC%9D%80-%EC%BD%94%EB%93%9C-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%9A%A9%EC%9D%B4%ED%95%9C-%EC%BD%94%EB%93%9C\" aria-label=\"번역 좋은 코드 테스트 용이한 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://ykss.netlify.app/translation/good_code_testable_code\"><strong>(번역) 좋은 코드, 테스트 용이한 코드</strong></a></h3>\n<ul>\n<li><code>코드의 복잡성과 테스트 설정의 복잡성 간의 관계</code></li>\n<li>코드는 단순하지만 테스트 하기에 복잡한 그러한 경우가 있다\n<ul>\n<li>생각나는 것은 파라미터가 엄청 큰 객체를 전달 받아 수많은 프로퍼티들을 사용하는 경우가 그러하다</li>\n<li>이 경우 다양한 케이스에 대해 검증하기 위해 수많은 형태의 테스트를 작성해야한다</li>\n<li>또는 모킹으로 처리하더라도 동일하다..</li>\n</ul>\n</li>\n<li>이러한 복잡성을 해결하기 위해 코드가 필요로하는 최소한의 파라미터를 받도록 정리한다\n<ul>\n<li>객체에서 뽑아낸 프로퍼티 보다는 숫자로 하나를 전달 받는게 간단하기 때문이다</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"번역-tdd에-대한-큰-오해\" style=\"position:relative;\"><a href=\"#%EB%B2%88%EC%97%AD-tdd%EC%97%90-%EB%8C%80%ED%95%9C-%ED%81%B0-%EC%98%A4%ED%95%B4\" aria-label=\"번역 tdd에 대한 큰 오해 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://velog.io/@surim014/the-big-tdd-misunderstanding\"><strong>[번역] TDD에 대한 큰 오해</strong></a></h3>\n<ul>\n<li>테스트 커버리지를 채우기 위해 남아있는 브랜치를 실행하는 테스트를 작성하지 말고</li>\n<li>사용자 관점에서 테스트 케이스를 작성하고나서 실행되지 않는 브랜치에 대한 코드를 재작성 하는 것을 고민해봐야한다\n<ul>\n<li>테스트를 작성하는 이유가 서비스가 안정적으로 동작하기 위함이기 때문에</li>\n<li>사용자 관점에서 동작하는 케이스들을 테스트 작성하는 것이다</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"번역-typescript-branded-types로-런타임-타입-안정성-개선하기\" style=\"position:relative;\"><a href=\"#%EB%B2%88%EC%97%AD-typescript-branded-types%EB%A1%9C-%EB%9F%B0%ED%83%80%EC%9E%84-%ED%83%80%EC%9E%85-%EC%95%88%EC%A0%95%EC%84%B1-%EA%B0%9C%EC%84%A0%ED%95%98%EA%B8%B0\" aria-label=\"번역 typescript branded types로 런타임 타입 안정성 개선하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://siosio3103.medium.com/typescript-branded-types%EB%A1%9C-%EB%9F%B0%ED%83%80%EC%9E%84-%ED%83%80%EC%9E%85-%EC%95%88%EC%A0%95%EC%84%B1-%EA%B0%9C%EC%84%A0%ED%95%98%EA%B8%B0-768222c8df0d\"><strong>(번역) TypeScript Branded Types로 런타임 타입 안정성 개선하기</strong></a></h3>\n<ul>\n<li><code>__brand</code> 프로퍼티로 같은 string 타입의 값이지만 다른 string 이 들어가는 것을 구분할 수 있게 한다\n<ul>\n<li>심볼처럼 각각이 다른 타입을 띄게 되는 것</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"재미와-이익을-위한-자바스크립트-최적화\" style=\"position:relative;\"><a href=\"#%EC%9E%AC%EB%AF%B8%EC%99%80-%EC%9D%B4%EC%9D%B5%EC%9D%84-%EC%9C%84%ED%95%9C-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%B5%9C%EC%A0%81%ED%99%94\" aria-label=\"재미와 이익을 위한 자바스크립트 최적화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://velog.io/@surim014/optimizing-javascript-for-fun-and-for-profit\"><strong>재미와 이익을 위한 자바스크립트 최적화</strong></a></h3>\n<ul>\n<li>충격적인 내용들이였다\n<ul>\n<li>벤치마킹을 할 수 있다면 당장 시도해봐야하는 것들이 잔뜩이다</li>\n</ul>\n</li>\n<li>문자열 비교 대신 아이디를 비교하도록 하고</li>\n<li>O(1) 이라고 생각했던 인덱스 찾아 비교하는 것도 문제가 될듯하다</li>\n<li>체인형으로 함수를 쓰는 것이 이쁘기는 하지만 최적화는 되지 않는것이 사실이다\n<ul>\n<li>여러번 돌고 있으니 어쩔 수 없는 사실</li>\n</ul>\n</li>\n</ul>","frontmatter":{"slug":"/blog/monthly-log/2024-09","date":"2024년 10월 22일","title":"9월 한달동안 로그","subtitle":"찾아보고, 읽어보고, 적어두기","tags":["log"]}}},"pageContext":{"id":"d6eff7da-ee49-5099-884b-2fa030ee357b","frontmatter__slug":"/blog/monthly-log/2024-09","__params":{"frontmatter__slug":"blog"}}},"staticQueryHashes":["3000541721","3293771174"]}